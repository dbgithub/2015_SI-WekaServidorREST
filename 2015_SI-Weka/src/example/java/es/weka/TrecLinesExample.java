package src.example.java.es.weka;

import java.io.File;
import java.util.HashMap;
import java.util.Map;

import src.main.java.es.weka.Dataset;
import src.main.java.es.weka.Decider;
import src.main.java.es.weka.DeciderBuilder;
import src.main.java.es.weka.InstanceBuilder.BuildResponse;
import weka.classifiers.functions.SMO;
import weka.core.Instance;

public class TrecLinesExample {

        private enum TrecFeatures {aeiou, a, abhorred, able, about, above, absolutely, access, account, achieve, acrobat, action, actually, address, adobe, after, again, age, aggresive, ago, agree, al, albert, alert, alice, all, allows, almost, alone, along, already, also, although, always, am, amazing, american, among, amount, an, anatrim, and, andrea, annoyed, another, antichrist, any, anyone, anything, anyway, anywhere, appetite, approaches, approved, april, are, area, arial, arms, around, art, article, as, asatru, ask, asked, assume, at, author, availability, available, away, b, back, bad, bank, barnwell, based, bat, bayonne, be, became, because, become, bed, been, before, began, behind, being, believe, below, benefit, best, better, between, big, bill, bit, blend, body, bonus, book, both, boy, boys, br, brocker, broker, brought, build, bullish, business, but, buy, by, c, call, called, came, can, canadian, cannot, capital, care, casino, caught, cause, cdt, cdyv, celtic, center, cents, century, chance, change, check, child, childhood, children, choice, choose, chose, christian, christianity, christians, cialis, circle, city, clean, click, climate, come, comes, coming, comments, companies, company, compensation, competing, complete, computer, contact, continued, corporation, could, count, country, course, coyote, creative, credit, culture, current, customer, customers, d, dangerous, data, date, day, days, de, deal, dear, debt, deceived, decided, deep, definitions, degree, del, delivery, depression, design, destroy, detected, detested, did, difference, different, difficult, directly, discount, discussion, div, doctor, doctrines, does, doesna, doing, don, dona, done, dose, down, download, drive, drug, drugs, druidism, during, dysfunction, e, each, early, earth, east, eat, eating, ed, eden, edt, eet, effect, effective, effects, either, el, electronic, em, email, en, energy, enlargement, ennis, enough, enterprise, eppg, erectile, erection, erections, error, es, esmtp, established, evanelists, evangelical, even, ever, every, everyone, everything, exercises, existed, expected, experience, express, exquisite, extra, eyes, face, fact, far, fast, fat, fda, feel, feeling, feet, felt, few, field, fight, figure, filtered, find, fine, fire, first, fit, five, fiz, flesh, food, forged, forget, format, formula, fotografia, found, four, free, friday, friend, friends, from, full, further, future, g, gain, game, games, gasses, generic, get, getting, gift, girl, give, giving, gnitpick, go, god, goes, going, gone, good, got, granted, great, greenhouse, greenwood, group, groups, growing, growth, grue, gte, had, half, hand, hands, hans, happiest, happy, hard, has, hate, have, he, head, headline, health, hear, heard, hellinic, helo, help, helps, helvetica, her, herbal, here, heretic, hgh, highly, him, his, history, hold, home, homemaker, hoodia, hope, hormone, hot, hottest, hours, house, how, however, html, human, i, im, image, importance, included, including, increased, industry, ineffective, influence, info, information, initiative, inline, instantly, instead, interest, internet, into, is, isn, isna, issue, it, its, jack, jesus, jo, job, joe, join, just, k, keep, kids, kilos, kinda, know, known, ktwarwic, l, la, large, largest, las, last, late, later, latest, learn, leave, left, less, let, level, levitra, li, life, light, like, lines, link, list, literally, little, live, lives, living, ll, local, localdomain, localhost, located, longer, look, looked, looking, los, lose, losing, loss, lot, lots, love, low, lowest, m, mac, macromedia, made, mail, main, major, make, male, man, manager, manufacturers, many, mar, market, marriage, matter, may, me, means, medications, meds, meet, memory, men, meridia, message, met, microsoft, mid, middle, might, million, millions, mimeole, mind, minos, minutes, miss, modern, mom, moment, mon, money, months, mood, more, most, mother, mouse, mr, ms, mso, msonormal, much, music, must, my, myself, n, na, name, nation, national, natural, near, need, needed, needs, net, network, never, news, next, nice, night, no, none, nor, normal, north, nosave, nose, not, nothing, now, number, o, odm, oem, of, off, offer, offers, office, often, oh, old, once, one, ones, online, only, ont, opportunity, optical, or, order, original, other, others, our, out, outlook, over, own, p, paganism, page, paid, para, part, partners, passed, passive, past, paths, patients, pay, peace, penis, people, per, perfect, person, personal, peter, pharmacies, pharmacy, pick, piece, pills, place, plan, plant, play, please, plg, pm, point, pollute, popular, population, por, pose, possibly, posted, pounds, power, powerful, prescription, pretty, price, prices, pro, problem, problems, procedures, produced, product, products, professional, profit, program, propecia, prosperous, provide, psyche, psycho, pumps, purchase, purple, put, qmail, quality, que, quick, quite, r, raise, rather, re, read, ready, real, really, reboot, receive, record, red, ref, refinance, regards, released, religions, religious, remember, replica, report, respond, response, result, results, reviews, rich, right, ro, rock, roman, royal, run, s, safe, said, sales, same, sat, save, saved, say, says, school, se, search, second, see, seem, seemed, seen, send, sense, sent, sentence, series, service, services, set, several, sex, sexual, shall, shamanism, share, she, shed, shipping, shoes, shop, should, show, showed, side, sign, sin, since, sir, site, small, smtp, so, social, society, soft, software, solid, soma, some, something, soon, sounds, source, south, space, span, special, speedy, spirit, spirits, spiritual, spring, st, start, started, state, states, status, stay, still, stop, store, strange, street, strong, strongmail, studio, style, subject, submit, such, suite, summer, sums, sun, support, sure, sym, system, t, tablet, tabs, take, taking, talk, target, tax, taxes, techniques, technology, tell, terminology, text, th, than, thank, thanks, that, the, their, them, then, theories, theorize, there, these, they, thing, things, think, thinking, those, though, thought, thousands, threats, three, through, thunderbird, till, time, today, together, told, too, took, top, town, trade, tramadol, treat, trebuchet, tried, troubling, trying, tue, turn, turned, turning, tutorials, tv, two, txp, u, uid, ultimate, un, under, united, unknown, until, up, upon, upto, us, usdrugs, use, used, using, v, valued, ve, verdana, version, very, viagra, videos, views, village, vip, virtual, visit, vista, voice, wait, walking, want, war, was, waste, watch, watches, way, we, web, website, week, weight, well, wendy, went, were, what, when, where, whether, which, white, who, whole, whom, why, wiccan, wider, wife, will, windows, windowtext, wish, with, without, woman, won, wonder, word, words, work, workers, works, worldview, worse, worst, would, write, www, y, year, years, yes, yet, you, young, younger, your, yours, yourself, abbott, according, accuweather, actual, add, added, additional, administration, against, agreed, agreement, alerts, alias, allison, alter, analysis, annex, ap, apple, archaeologists, areas, arm, atlanta, barracuda, base, bbc, begin, beginning, bhatia, black, blood, blue, bob, bold, branches, breaking, broken, bruto, buffer, bug, built, bulk, bush, buttons, cable, cacheprime, california, calls, campaign, capricorn, cases, cbs, cbsnews, cc, certain, cest, cf, cgi, ch, chairman, changed, changes, changeset, cheers, clear, client, clients, close, clouds, cloudy, cnn, co, cochrane, code, commands, commented, commercial, commit, committee, conf, conference, configure, congress, content, control, cool, copy, copyright, core, corp, correct, correspondence, countries, court, create, created, cultural, currently, cut, cvs, dafydd, daily, datasets, dealers, debian, decision, dedibox, demand, democratic, democrats, department, dept, des, description, develooper, development, devices, di, didmsg, didn, differential, directory, discuss, discussions, document, doesn, domain, dp, du, earlier, easter, easy, ebzao, echo, edu, ensure, entry, environment, err, essential, et, etc, ethz, event, example, exchange, exim, experts, ezmlm, f, factor, fd, file, files, firewall, fix, fixed, fixes, flag, flags, fog, following, force, forecast, foreign, former, fox, foxnews, frame, framework, fri, fromfd, fta, function, functions, gabor, gas, general, george, georgia, gets, given, global, gmt, gonzales, google, government, green, greg, guide, h, handle, hello, hi, hourly, hover, howstuffworks, htaccess, http, hypatia, immediately, immigration, important, imus, inc, include, includes, india, initial, innovative, inside, install, installed, institute, integration, intellectual, intended, interaction, interactive, internal, internals, international, interp, intval, invoked, iraq, issues, item, james, jeremy, jerry, john, johnson, kernel, king, korea, korean, labor, lack, language, lapply, laptop, law, le, least, len, les, lib, likely, links, linux, lists, listserv, log, looks, lp, machine, machines, mailhost, mailing, makes, making, manage, management, marketing, math, max, maybe, medical, medicines, medium, meeting, members, messages, messaging, method, methods, michael, mike, minimal, mirror, model, modified, modify, module, modules, monday, morning, mostly, muenchen, multiple, murphy, museum, mx, mylast, nearly, newsletter, nl, noshade, notification, nread, nt, nuclear, num, ny, object, objects, offset, op, open, option, options, org, packages, panel, par, parrot, particular, pass, patch, patent, paul, pdt, peach, pedal, performance, period, perl, pharmaceutical, pharmaceuticals, pickup, planning, platform, plot, plus, policy, political, port, possible, post, postfix, posting, precedence, preference, preferences, president, presidential, pressure, pricing, primary, print, probably, process, produce, programs, project, property, provided, provision, provisions, push, qmqp, question, questions, quote, rbind, readahead, reading, reads, reason, reasons, receiving, recently, references, related, relations, release, remove, reproducible, request, requested, research, reserved, restrictions, returned, rev, review, revision, rights, robert, rserve, rule, rules, running, samba, sans, sas, saturday, script, security, seems, senate, server, settings, sharpton, showbiz, shows, similar, simon, simple, single, smb, smtpsvc, snow, solve, someone, spam, spamassassin, spatstat, specific, sportsline, standard, stat, statistical, stats, stock, stories, story, string, struct, student, subscribe, subscribed, subversion, sugar, summary, sunday, sunny, svn, systems, table, tahoma, td, terms, test, tests, therefore, thursday, ticket, todo, tonight, trouble, txu, type, uintval, uk, understand, university, unsigned, unsubscribe, update, uppercase, urn, useful, user, userid, users, ustr, utc, utilities, utility, value, values, var, variable, variables, via, video, visited, vol, vs, w, warner, warnings, washington, ways, wcl, weather, websvn, weeks, whenever, width, win, within, worked, working, writes, wrong, wrote, x, york};
        private enum TrecClass {spam,ham} ;

        @SuppressWarnings({ "unchecked", "rawtypes" })
		public static void main(String[] args) throws Exception {

                //build a decider, which knows:
                // - what attributes are involved
                // - what data types these attributes are (in this case all numeric)
                // - what the expected output is (in this case, an enum, but numeric and binary is also doable)
                Decider<TrecFeatures,TrecClass> decider = 
                        new DeciderBuilder("TrecDecider", TrecFeatures.class)
                .setDefaultAttributeTypeNumeric()
                .setClassAttributeTypeEnum("$class$", TrecClass.class)
                .build();

                //load training data from file
                //this will check that attributes match TrecFeatures enum, that class attribute is named "class" and is of correct type, and so on.
                Dataset<TrecFeatures,TrecClass> dataset = decider.createNewDataset() ;
                dataset.load(new File("src/example/resources/trecv6.arff")) ;

                //train a classifier using loaded training data.
                decider.train(new SMO(), dataset) ;

                //save the classifier so we could skip training in future
                //unfortunately this doesn't make any checks to see if classifier was trained on expected attributes
                //any idea how one would do that?
                decider.save(new File("src/example/resources/trec.model")) ;

                //load the classifier saved previously
                //unfortunately this doesn't make any checks to see if classifier was trained on expected attributes
                decider.load(new File("src/example/resources/trec.model")) ;
                
                String correo = "    \n \tby speedy.uwaterloo.ca  with esmtp id  \n \tfor  sun,  apr    \n date: sun,  apr    \n received: from mail.cnn.com  \n   by  with esmtp;  apr    \n message-id:  \n from: cnn alerts  \n reply-to:  \n to:  \n subject: cnn alerts: bush\n \n mime-version:  \n content-type:   \n status: o\n \n content-length:  \n lines: ";
                //HAM
                //correo = correo + "\n \n \n \n \n hi...\n \n \n \n i have to use r to find out the  confidence-interval for the sensitivity\n \n and specificity of the following diagnostic test:\n \n \n \n a particular diagnostic test for multiple sclerosis was conducted on  ms\n \n patients and  healthy subjects,  ms patients were classified as healthy\n \n and  healthy subjects were classified as suffering from the ms.\n \n \n \n furthermore, i need to find the number of ms patients required for a\n \n sensitivity of  \n \n \n is there a simple r-command which can do that for me?\n \n \n \n i am completely new to r...\n \n \n \n help please!\n \n \n \n jochen\n \n -- \n \n view this message in context:  \n sent from the r help mailing list archive at nabble.com.\n \n \n \n  \n  mailing list\n \n  \n please do read the posting guide  \n and provide commented, minimal, self-contained, reproducible code.\n \n \n \n ";
                //HAM
                //correo = correo + " \n \n \n hm... sounds like a homework problem to me...\n \n \n \n maybe start by figuring out how to do it without r -\n \n what\'s the approach, and how would you calculate it?\n \n then search r help for the possible key words you\n \n came up with.\n \n \n \n sarah\n \n \n \n on  jochen.f  wrote:\n \n  \n  hi...\n \n  \n  i have to use r to find out the  confidence-interval for the sensitivity\n \n  and specificity of the following diagnostic test:\n \n  \n  a particular diagnostic test for multiple sclerosis was conducted on  ms\n \n  patients and  healthy subjects,  ms patients were classified as healthy\n \n  and  healthy subjects were classified as suffering from the ms.\n \n  \n  furthermore, i need to find the number of ms patients required for a\n \n  sensitivity of  \n  \n  is there a simple r-command which can do that for me?\n \n  \n  i am completely new to r...\n \n  \n  help please!\n \n  \n  jochen\n \n  --\n \n -- \n \n sarah goslee\n \n  \n \n \n  \n  mailing list\n \n  \n please do read the posting guide  \n and provide commented, minimal, self-contained, reproducible code.\n \n \n \n ";
                //HAM
                //correo = correo + " \n \n \n gruesse!\n \n  v.harishankar  schrieb am   \n  i have a problem with my hp compaq  laptop.\n \n  \n \n  since upgrading to kernel  (currently running version\n \n   on debian etch i\'ve been unable to get acpi to work\n \n  on the machine. as a result i don\'t get any battery or ac status and\n \n  the machine doesn\'t power off properly when i shut down.\n \n \n \n if you not already seen this:\n \n  \n \n \n  regards,\n \n  hari\n \n \n \n gruß\n \n \tgerhard\n \n -- \n \n kernel panic: could not determine whether\n \n bit was one, zero or  \n (j.k. in d-u-g)\n \n \n \n \n \n -- \n \n to unsubscribe, email to  \n with a subject of \"unsubscribe\". trouble? contact  \n \n \n ";
                //SPAM
                //correo = correo + "this is a multi-part message in mime format.";
                //SPAM
                correo = correo + " \n \n \n  html public  html    \n  \n     greenwood  is a term with many uses, particularly as a placename and a           \n    \n  \n  \n    \n   \n    have over  inventionmen   waiting to work on your product  \n          \n \t\t\t      \n  \n       here to submit your  \n  \n  \n   \n  july  davison was awarded two prestigious industrial design excellence awards from the industrial design society of america for the bikeboard and the hover creeper. awards were announced in the july   issue of businessweek  \n         \n    \n   provides services to professionally prepare and present product ideas to potential licensees. some services are provided for a contingent fee, or a percentage of royalties obtained by the client, and some services are provided for an upfront fee paid by the client. davison does not perform analysis of the potential feasibility, marketability, patentability or profitability of ideas submitted to it. new product development is an uncertain endeavor and davison does not warrant or guarantee, expressly or impliedly, that an idea submitted to it will be licensed, sell on any market or provide a positive return to the inventor on money spent for   \n         \n  \n  \n  \n \n \n \n \n \n \n  \n  greenwood  is a term with many uses, particularly as a placename and a personal\n \n name  placenames\n \n \n \n australia\n \n   greenwood, western australia, a suburb of perth\n \n \n \n canada\n \n   greenwood  ttc , a station on the bloor danforth line of the subway system in\n \n   toronto\n \n   greenwood, british columbia\n \n   greenwood, nova scotia, a village\n \n   greenwood, durham regional municipality, ontario\n \n   greenwood, huron county, ontario\n \n   greenwood, renfrew county, ontario\n \n   greenwood raceway, a harness horse racing track in toronto\n \n \n \n malaysia\n \n   greenwood, taman, a housing area just off the city of kuala lumpur\n \n \n \n united kingdom\n \n   greenwood or greenwode, a settlement near heptonstall in the metropolitan\n \n   district of calderdale in west yorkshire. homestead of wyomarus de greenwode,\n \n   believed to be the principal ancestor of english greenwoods. ref    cite book\n \n    last   greenwood first   frederick title   greenwood genealogies,   \n      the ancestry and descendants of thomas greenwood of newton massachusetts,\n \n    nathaniel and samuel greenwood of boston, massachusetts, john greenwood of\n \n    virginia, and many later arrivals in america, also the early history of the\n \n    greenwoods in england, and the arms they used. publisher   the lyons\n \n    genealogical company origyear    location   new york pages     \n    chapter   chapter   english history of the family and origin of the name\n \n    url  \n \n    http   patriot.lib.byu.edu  document.php?cisoroot   cisoptr    \n \n   ref \n \n \n \n united states\n \n   greenwood, arkansas, a city\n \n   greenwood, california\n \n   greenwood, delaware, a town\n \n   greenwood, florida, a town\n \n   greenwood, illinois, a village\n \n   greenwood, indiana, a city\n \n   greenwood, louisiana, a town\n \n   greenwood, maine, a town\n \n   greenwood, minnesota, a city\n \n   greenwood, mississippi, a city\n \n   greenwood, missouri, a city\n \n   greenwood, nebraska, a village\n \n   greenwood, new york, a town\n \n   greenwood, south carolina, a city\n \n   greenwood, tennessee, a place appearing on the list of registered historic\n \n   places in tennessee\n \n   greenwood, midland county, texas\n \n   greenwood, parker county, texas\n \n   greenwood, wise county, texas\n \n   greenwood, clark county, wisconsin, a city\n \n   greenwood, taylor county, wisconsin, a town\n \n   greenwood, vernon county, wisconsin, a town\n \n   greenwood, seattle, washington, a neighborhood\n \n   greenwood, tulsa, oklahoma, a neighborhood\n \n   greenwood furnace state park in pennsylvania\n \n   greenwood lake, new york, a village\n \n   greenwood museum, smyrna, new york\n \n   greenwood observatory, a telescope in jenny jump state forest, new jersey\n \n   greenwood ridge, california\n \n   greenwood springs, mississippi\n \n   greenwood village, colorado, a city\n \n   mount greenwood, chicago\n \n \n \n names\n \n   al greenwood, former keyboarder of the rock band foreigner\n \n   anthony greenwood, english minister of overseas development   ndash  \n \n   arthur greenwood   ndash  , british politician\n \n   arthur h. greenwood   ndash  , american politician\n \n   bob greenwood   ndash  , mexican major league baseball player\n \n   bruce greenwood  born  , canadian film actor\n \n   caleb greenwood, trapper, guide, and early pioneer of the american west\n \n   charlotte greenwood, actress from the  to the  \n   chester greenwood   ndash  , american inventor of earmuffs\n \n   clarence greenwood, american musician, leader of the band citizen cope\n \n   clint greenwood, founder of clint greenwood soccer academy and the  greenwood\n \n   method \n \n   colin greenwood  born  , british musician, bassist for radiohead  brother\n \n   of jonny greenwood \n \n   dick greenwood  born  , english rugby footballer\n \n   don greenwood, co creator of the board game  of  \n   ed greenwood  born  , canadian library clerk, inventor of the forgotten\n \n   realms dungeons   dragons campaign setting\n \n   francis william pitt greenwood   ndash  , american clergyman, pastor\n \n   of king s chapel, associate editor of the christian examiner\n \n   frederick greenwood   ndash  , english journalist\n \n   greenwood leflore, an american indian, chief of the choctaw tribe\n \n   harry greenwood   ndash  , english soldier, recipient of the victoria\n \n   cross\n \n   sir hamar greenwood, irish chief secretary for ireland from  to  \n   hunphry greenwood   ndash  , ichithyolist     peter hunphry greenwood  \n \n    \n \n   isaac greenwood, mathematician   ndash  , first chair of mathematics\n \n   and natural philosophy at harvard college\n \n   ivor greenwood, senator and attorney general of australia    and\n \n    \n \n   jack greenwood, track and field athlete, world record holder in many masters,\n \n   over  yrs old, catigories. inducted into the track and field hall of fame,\n \n   masters division.\n \n   james c. greenwood  born  , american politician from the state of\n \n   pennsylvania\n \n   james m. greenwood   ndash ? , american educator, late  century\n \n   superintendent of schools in kansas city, missouri\n \n   joan greenwood    , british actress\n \n   john greenwood  died  , english puritan and separatist\n \n   john greenwood        , george washington s dentist, the\n \n    father of modern dentistry  and revolutionary war patriot\n \n   john greenwood, pseudonym of john buxton hilton, british crime writer\n \n   john dh greenwood   ndash  , english film score composer\n \n   jonny greenwood  born  , english musician, guitarist for radiohead\n \n    brother of colin greenwood \n \n   joseph greenwood,  century new zealand politician and soldier\n \n   kathy greenwood  born  , canadian comedienne\n \n   kerry greenwood, australian author of the phryne fisher mystery series\n \n   lee greenwood  born  , american singer and composer\n \n   leigh greenwood, author\n \n   major greenwood   ndash  , english epidemiologist and statistician\n \n   miles greenwood   ndash  , manufacturer, established  \n    \n      \n   \n    \n  \n  \n              \n \n  \n    \n \n \n ";
                System.out.println(correo);
        		correo = " " + correo.toLowerCase().replace("\n", " ").replace("\t", " ").replace(" \"", " ").replace("\" ", " ").replace(" ", "  ").replace(". ", " ").replace(", ", " ").replace(": ", " ").replace("; ", " ").replace(" ¿", " ").replace("? ", " ").replace(" ¡", " ").replace("! ", " ") + " ";
                System.out.println(correo);

                //build an instance that we can classify
                //this will check that all attributes are set (optional) and that values are the correct type.
                Instance i = decider.getInstanceBuilder()
                .setAttributeMissingResponse(BuildResponse.THROW_ERROR)
                .setAttribute(TrecFeatures.aeiou, 0)
                .setAttribute(TrecFeatures.a, contarPalabras(correo, " a "))
                .setAttribute(TrecFeatures.abhorred, contarPalabras(correo, " abhorred "))
                .setAttribute(TrecFeatures.able, contarPalabras(correo, " able "))
                .setAttribute(TrecFeatures.about, contarPalabras(correo, " about "))
                .setAttribute(TrecFeatures.above, contarPalabras(correo, " above "))
                .setAttribute(TrecFeatures.absolutely, contarPalabras(correo, " absolutely "))
                .setAttribute(TrecFeatures.access, contarPalabras(correo, " access "))
                .setAttribute(TrecFeatures.account, contarPalabras(correo, " account "))
                .setAttribute(TrecFeatures.achieve, contarPalabras(correo, " achieve "))
                .setAttribute(TrecFeatures.acrobat, contarPalabras(correo, " acrobat "))
                .setAttribute(TrecFeatures.action, contarPalabras(correo, " action "))
                .setAttribute(TrecFeatures.actually, contarPalabras(correo, " actually "))
                .setAttribute(TrecFeatures.address, contarPalabras(correo, " address "))
                .setAttribute(TrecFeatures.adobe, contarPalabras(correo, " adobe "))
                .setAttribute(TrecFeatures.after, contarPalabras(correo, " after "))
                .setAttribute(TrecFeatures.again, contarPalabras(correo, " again "))
                .setAttribute(TrecFeatures.age, contarPalabras(correo, " age "))
                .setAttribute(TrecFeatures.aggresive, contarPalabras(correo, " aggresive "))
                .setAttribute(TrecFeatures.ago, contarPalabras(correo, " ago "))
                .setAttribute(TrecFeatures.agree, contarPalabras(correo, " agree "))
                .setAttribute(TrecFeatures.al, contarPalabras(correo, " al "))
                .setAttribute(TrecFeatures.albert, contarPalabras(correo, " albert "))
                .setAttribute(TrecFeatures.alert, contarPalabras(correo, " alert "))
                .setAttribute(TrecFeatures.alice, contarPalabras(correo, " alice "))
                .setAttribute(TrecFeatures.all, contarPalabras(correo, " all "))
                .setAttribute(TrecFeatures.allows, contarPalabras(correo, " allows "))
                .setAttribute(TrecFeatures.almost, contarPalabras(correo, " almost "))
                .setAttribute(TrecFeatures.alone, contarPalabras(correo, " alone "))
                .setAttribute(TrecFeatures.along, contarPalabras(correo, " along "))
                .setAttribute(TrecFeatures.already, contarPalabras(correo, " already "))
                .setAttribute(TrecFeatures.also, contarPalabras(correo, " also "))
                .setAttribute(TrecFeatures.although, contarPalabras(correo, " although "))
                .setAttribute(TrecFeatures.always, contarPalabras(correo, " always "))
                .setAttribute(TrecFeatures.am, contarPalabras(correo, " am "))
                .setAttribute(TrecFeatures.amazing, contarPalabras(correo, " amazing "))
                .setAttribute(TrecFeatures.american, contarPalabras(correo, " american "))
                .setAttribute(TrecFeatures.among, contarPalabras(correo, " among "))
                .setAttribute(TrecFeatures.amount, contarPalabras(correo, " amount "))
                .setAttribute(TrecFeatures.an, contarPalabras(correo, " an "))
                .setAttribute(TrecFeatures.anatrim, contarPalabras(correo, " anatrim "))
                .setAttribute(TrecFeatures.and, contarPalabras(correo, " and "))
                .setAttribute(TrecFeatures.andrea, contarPalabras(correo, " andrea "))
                .setAttribute(TrecFeatures.annoyed, contarPalabras(correo, " annoyed "))
                .setAttribute(TrecFeatures.another, contarPalabras(correo, " another "))
                .setAttribute(TrecFeatures.antichrist, contarPalabras(correo, " antichrist "))
                .setAttribute(TrecFeatures.any, contarPalabras(correo, " any "))
                .setAttribute(TrecFeatures.anyone, contarPalabras(correo, " anyone "))
                .setAttribute(TrecFeatures.anything, contarPalabras(correo, " anything "))
                .setAttribute(TrecFeatures.anyway, contarPalabras(correo, " anyway "))
                .setAttribute(TrecFeatures.anywhere, contarPalabras(correo, " anywhere "))
                .setAttribute(TrecFeatures.appetite, contarPalabras(correo, " appetite "))
                .setAttribute(TrecFeatures.approaches, contarPalabras(correo, " approaches "))
                .setAttribute(TrecFeatures.approved, contarPalabras(correo, " approved "))
                .setAttribute(TrecFeatures.april, contarPalabras(correo, " april "))
                .setAttribute(TrecFeatures.are, contarPalabras(correo, " are "))
                .setAttribute(TrecFeatures.area, contarPalabras(correo, " area "))
                .setAttribute(TrecFeatures.arial, contarPalabras(correo, " arial "))
                .setAttribute(TrecFeatures.arms, contarPalabras(correo, " arms "))
                .setAttribute(TrecFeatures.around, contarPalabras(correo, " around "))
                .setAttribute(TrecFeatures.art, contarPalabras(correo, " art "))
                .setAttribute(TrecFeatures.article, contarPalabras(correo, " article "))
                .setAttribute(TrecFeatures.as, contarPalabras(correo, " as "))
                .setAttribute(TrecFeatures.asatru, contarPalabras(correo, " asatru "))
                .setAttribute(TrecFeatures.ask, contarPalabras(correo, " ask "))
                .setAttribute(TrecFeatures.asked, contarPalabras(correo, " asked "))
                .setAttribute(TrecFeatures.assume, contarPalabras(correo, " assume "))
                .setAttribute(TrecFeatures.at, contarPalabras(correo, " at "))
                .setAttribute(TrecFeatures.author, contarPalabras(correo, " author "))
                .setAttribute(TrecFeatures.availability, contarPalabras(correo, " availability "))
                .setAttribute(TrecFeatures.available, contarPalabras(correo, " available "))
                .setAttribute(TrecFeatures.away, contarPalabras(correo, " away "))
                .setAttribute(TrecFeatures.b, contarPalabras(correo, " b "))
                .setAttribute(TrecFeatures.back, contarPalabras(correo, " back "))
                .setAttribute(TrecFeatures.bad, contarPalabras(correo, " bad "))
                .setAttribute(TrecFeatures.bank, contarPalabras(correo, " bank "))
                .setAttribute(TrecFeatures.barnwell, contarPalabras(correo, " barnwell "))
                .setAttribute(TrecFeatures.based, contarPalabras(correo, " based "))
                .setAttribute(TrecFeatures.bat, contarPalabras(correo, " bat "))
                .setAttribute(TrecFeatures.bayonne, contarPalabras(correo, " bayonne "))
                .setAttribute(TrecFeatures.be, contarPalabras(correo, " be "))
                .setAttribute(TrecFeatures.became, contarPalabras(correo, " became "))
                .setAttribute(TrecFeatures.because, contarPalabras(correo, " because "))
                .setAttribute(TrecFeatures.become, contarPalabras(correo, " become "))
                .setAttribute(TrecFeatures.bed, contarPalabras(correo, " bed "))
                .setAttribute(TrecFeatures.been, contarPalabras(correo, " been "))
                .setAttribute(TrecFeatures.before, contarPalabras(correo, " before "))
                .setAttribute(TrecFeatures.began, contarPalabras(correo, " began "))
                .setAttribute(TrecFeatures.behind, contarPalabras(correo, " behind "))
                .setAttribute(TrecFeatures.being, contarPalabras(correo, " being "))
                .setAttribute(TrecFeatures.believe, contarPalabras(correo, " believe "))
                .setAttribute(TrecFeatures.below, contarPalabras(correo, " below "))
                .setAttribute(TrecFeatures.benefit, contarPalabras(correo, " benefit "))
                .setAttribute(TrecFeatures.best, contarPalabras(correo, " best "))
                .setAttribute(TrecFeatures.better, contarPalabras(correo, " better "))
                .setAttribute(TrecFeatures.between, contarPalabras(correo, " between "))
                .setAttribute(TrecFeatures.big, contarPalabras(correo, " big "))
                .setAttribute(TrecFeatures.bill, contarPalabras(correo, " bill "))
                .setAttribute(TrecFeatures.bit, contarPalabras(correo, " bit "))
                .setAttribute(TrecFeatures.blend, contarPalabras(correo, " blend "))
                .setAttribute(TrecFeatures.body, contarPalabras(correo, " body "))
                .setAttribute(TrecFeatures.bonus, contarPalabras(correo, " bonus "))
                .setAttribute(TrecFeatures.book, contarPalabras(correo, " book "))
                .setAttribute(TrecFeatures.both, contarPalabras(correo, " both "))
                .setAttribute(TrecFeatures.boy, contarPalabras(correo, " boy "))
                .setAttribute(TrecFeatures.boys, contarPalabras(correo, " boys "))
                .setAttribute(TrecFeatures.br, contarPalabras(correo, " br "))
                .setAttribute(TrecFeatures.brocker, contarPalabras(correo, " brocker "))
                .setAttribute(TrecFeatures.broker, contarPalabras(correo, " broker "))
                .setAttribute(TrecFeatures.brought, contarPalabras(correo, " brought "))
                .setAttribute(TrecFeatures.build, contarPalabras(correo, " build "))
                .setAttribute(TrecFeatures.bullish, contarPalabras(correo, " bullish "))
                .setAttribute(TrecFeatures.business, contarPalabras(correo, " business "))
                .setAttribute(TrecFeatures.but, contarPalabras(correo, " but "))
                .setAttribute(TrecFeatures.buy, contarPalabras(correo, " buy "))
                .setAttribute(TrecFeatures.by, contarPalabras(correo, " by "))
                .setAttribute(TrecFeatures.c, contarPalabras(correo, " c "))
                .setAttribute(TrecFeatures.call, contarPalabras(correo, " call "))
                .setAttribute(TrecFeatures.called, contarPalabras(correo, " called "))
                .setAttribute(TrecFeatures.came, contarPalabras(correo, " came "))
                .setAttribute(TrecFeatures.can, contarPalabras(correo, " can "))
                .setAttribute(TrecFeatures.canadian, contarPalabras(correo, " canadian "))
                .setAttribute(TrecFeatures.cannot, contarPalabras(correo, " cannot "))
                .setAttribute(TrecFeatures.capital, contarPalabras(correo, " capital "))
                .setAttribute(TrecFeatures.care, contarPalabras(correo, " care "))
                .setAttribute(TrecFeatures.casino, contarPalabras(correo, " casino "))
                .setAttribute(TrecFeatures.caught, contarPalabras(correo, " caught "))
                .setAttribute(TrecFeatures.cause, contarPalabras(correo, " cause "))
                .setAttribute(TrecFeatures.cdt, contarPalabras(correo, " cdt "))
                .setAttribute(TrecFeatures.cdyv, contarPalabras(correo, " cdyv "))
                .setAttribute(TrecFeatures.celtic, contarPalabras(correo, " celtic "))
                .setAttribute(TrecFeatures.center, contarPalabras(correo, " center "))
                .setAttribute(TrecFeatures.cents, contarPalabras(correo, " cents "))
                .setAttribute(TrecFeatures.century, contarPalabras(correo, " century "))
                .setAttribute(TrecFeatures.chance, contarPalabras(correo, " chance "))
                .setAttribute(TrecFeatures.change, contarPalabras(correo, " change "))
                .setAttribute(TrecFeatures.check, contarPalabras(correo, " check "))
                .setAttribute(TrecFeatures.child, contarPalabras(correo, " child "))
                .setAttribute(TrecFeatures.childhood, contarPalabras(correo, " childhood "))
                .setAttribute(TrecFeatures.children, contarPalabras(correo, " children "))
                .setAttribute(TrecFeatures.choice, contarPalabras(correo, " choice "))
                .setAttribute(TrecFeatures.choose, contarPalabras(correo, " choose "))
                .setAttribute(TrecFeatures.chose, contarPalabras(correo, " chose "))
                .setAttribute(TrecFeatures.christian, contarPalabras(correo, " christian "))
                .setAttribute(TrecFeatures.christianity, contarPalabras(correo, " christianity "))
                .setAttribute(TrecFeatures.christians, contarPalabras(correo, " christians "))
                .setAttribute(TrecFeatures.cialis, contarPalabras(correo, " cialis "))
                .setAttribute(TrecFeatures.circle, contarPalabras(correo, " circle "))
                .setAttribute(TrecFeatures.city, contarPalabras(correo, " city "))
                .setAttribute(TrecFeatures.clean, contarPalabras(correo, " clean "))
                .setAttribute(TrecFeatures.click, contarPalabras(correo, " click "))
                .setAttribute(TrecFeatures.climate, contarPalabras(correo, " climate "))
                .setAttribute(TrecFeatures.come, contarPalabras(correo, " come "))
                .setAttribute(TrecFeatures.comes, contarPalabras(correo, " comes "))
                .setAttribute(TrecFeatures.coming, contarPalabras(correo, " coming "))
                .setAttribute(TrecFeatures.comments, contarPalabras(correo, " comments "))
                .setAttribute(TrecFeatures.companies, contarPalabras(correo, " companies "))
                .setAttribute(TrecFeatures.company, contarPalabras(correo, " company "))
                .setAttribute(TrecFeatures.compensation, contarPalabras(correo, " compensation "))
                .setAttribute(TrecFeatures.competing, contarPalabras(correo, " competing "))
                .setAttribute(TrecFeatures.complete, contarPalabras(correo, " complete "))
                .setAttribute(TrecFeatures.computer, contarPalabras(correo, " computer "))
                .setAttribute(TrecFeatures.contact, contarPalabras(correo, " contact "))
                .setAttribute(TrecFeatures.continued, contarPalabras(correo, " continued "))
                .setAttribute(TrecFeatures.corporation, contarPalabras(correo, " corporation "))
                .setAttribute(TrecFeatures.could, contarPalabras(correo, " could "))
                .setAttribute(TrecFeatures.count, contarPalabras(correo, " count "))
                .setAttribute(TrecFeatures.country, contarPalabras(correo, " country "))
                .setAttribute(TrecFeatures.course, contarPalabras(correo, " course "))
                .setAttribute(TrecFeatures.coyote, contarPalabras(correo, " coyote "))
                .setAttribute(TrecFeatures.creative, contarPalabras(correo, " creative "))
                .setAttribute(TrecFeatures.credit, contarPalabras(correo, " credit "))
                .setAttribute(TrecFeatures.culture, contarPalabras(correo, " culture "))
                .setAttribute(TrecFeatures.current, contarPalabras(correo, " current "))
                .setAttribute(TrecFeatures.customer, contarPalabras(correo, " customer "))
                .setAttribute(TrecFeatures.customers, contarPalabras(correo, " customers "))
                .setAttribute(TrecFeatures.d, contarPalabras(correo, " d "))
                .setAttribute(TrecFeatures.dangerous, contarPalabras(correo, " dangerous "))
                .setAttribute(TrecFeatures.data, contarPalabras(correo, " data "))
                .setAttribute(TrecFeatures.date, contarPalabras(correo, " date "))
                .setAttribute(TrecFeatures.day, contarPalabras(correo, " day "))
                .setAttribute(TrecFeatures.days, contarPalabras(correo, " days "))
                .setAttribute(TrecFeatures.de, contarPalabras(correo, " de "))
                .setAttribute(TrecFeatures.deal, contarPalabras(correo, " deal "))
                .setAttribute(TrecFeatures.dear, contarPalabras(correo, " dear "))
                .setAttribute(TrecFeatures.debt, contarPalabras(correo, " debt "))
                .setAttribute(TrecFeatures.deceived, contarPalabras(correo, " deceived "))
                .setAttribute(TrecFeatures.decided, contarPalabras(correo, " decided "))
                .setAttribute(TrecFeatures.deep, contarPalabras(correo, " deep "))
                .setAttribute(TrecFeatures.definitions, contarPalabras(correo, " definitions "))
                .setAttribute(TrecFeatures.degree, contarPalabras(correo, " degree "))
                .setAttribute(TrecFeatures.del, contarPalabras(correo, " del "))
                .setAttribute(TrecFeatures.delivery, contarPalabras(correo, " delivery "))
                .setAttribute(TrecFeatures.depression, contarPalabras(correo, " depression "))
                .setAttribute(TrecFeatures.design, contarPalabras(correo, " design "))
                .setAttribute(TrecFeatures.destroy, contarPalabras(correo, " destroy "))
                .setAttribute(TrecFeatures.detected, contarPalabras(correo, " detected "))
                .setAttribute(TrecFeatures.detested, contarPalabras(correo, " detested "))
                .setAttribute(TrecFeatures.did, contarPalabras(correo, " did "))
                .setAttribute(TrecFeatures.difference, contarPalabras(correo, " difference "))
                .setAttribute(TrecFeatures.different, contarPalabras(correo, " different "))
                .setAttribute(TrecFeatures.difficult, contarPalabras(correo, " difficult "))
                .setAttribute(TrecFeatures.directly, contarPalabras(correo, " directly "))
                .setAttribute(TrecFeatures.discount, contarPalabras(correo, " discount "))
                .setAttribute(TrecFeatures.discussion, contarPalabras(correo, " discussion "))
                .setAttribute(TrecFeatures.div, contarPalabras(correo, " div "))
                .setAttribute(TrecFeatures.doctor, contarPalabras(correo, " doctor "))
                .setAttribute(TrecFeatures.doctrines, contarPalabras(correo, " doctrines "))
                .setAttribute(TrecFeatures.does, contarPalabras(correo, " does "))
                .setAttribute(TrecFeatures.doesna, contarPalabras(correo, " doesna "))
                .setAttribute(TrecFeatures.doing, contarPalabras(correo, " doing "))
                .setAttribute(TrecFeatures.don, contarPalabras(correo, " don "))
                .setAttribute(TrecFeatures.dona, contarPalabras(correo, " dona "))
                .setAttribute(TrecFeatures.done, contarPalabras(correo, " done "))
                .setAttribute(TrecFeatures.dose, contarPalabras(correo, " dose "))
                .setAttribute(TrecFeatures.down, contarPalabras(correo, " down "))
                .setAttribute(TrecFeatures.download, contarPalabras(correo, " download "))
                .setAttribute(TrecFeatures.drive, contarPalabras(correo, " drive "))
                .setAttribute(TrecFeatures.drug, contarPalabras(correo, " drug "))
                .setAttribute(TrecFeatures.drugs, contarPalabras(correo, " drugs "))
                .setAttribute(TrecFeatures.druidism, contarPalabras(correo, " druidism "))
                .setAttribute(TrecFeatures.during, contarPalabras(correo, " during "))
                .setAttribute(TrecFeatures.dysfunction, contarPalabras(correo, " dysfunction "))
                .setAttribute(TrecFeatures.e, contarPalabras(correo, " e "))
                .setAttribute(TrecFeatures.each, contarPalabras(correo, " each "))
                .setAttribute(TrecFeatures.early, contarPalabras(correo, " early "))
                .setAttribute(TrecFeatures.earth, contarPalabras(correo, " earth "))
                .setAttribute(TrecFeatures.east, contarPalabras(correo, " east "))
                .setAttribute(TrecFeatures.eat, contarPalabras(correo, " eat "))
                .setAttribute(TrecFeatures.eating, contarPalabras(correo, " eating "))
                .setAttribute(TrecFeatures.ed, contarPalabras(correo, " ed "))
                .setAttribute(TrecFeatures.eden, contarPalabras(correo, " eden "))
                .setAttribute(TrecFeatures.edt, contarPalabras(correo, " edt "))
                .setAttribute(TrecFeatures.eet, contarPalabras(correo, " eet "))
                .setAttribute(TrecFeatures.effect, contarPalabras(correo, " effect "))
                .setAttribute(TrecFeatures.effective, contarPalabras(correo, " effective "))
                .setAttribute(TrecFeatures.effects, contarPalabras(correo, " effects "))
                .setAttribute(TrecFeatures.either, contarPalabras(correo, " either "))
                .setAttribute(TrecFeatures.el, contarPalabras(correo, " el "))
                .setAttribute(TrecFeatures.electronic, contarPalabras(correo, " electronic "))
                .setAttribute(TrecFeatures.em, contarPalabras(correo, " em "))
                .setAttribute(TrecFeatures.email, contarPalabras(correo, " email "))
                .setAttribute(TrecFeatures.en, contarPalabras(correo, " en "))
                .setAttribute(TrecFeatures.energy, contarPalabras(correo, " energy "))
                .setAttribute(TrecFeatures.enlargement, contarPalabras(correo, " enlargement "))
                .setAttribute(TrecFeatures.ennis, contarPalabras(correo, " ennis "))
                .setAttribute(TrecFeatures.enough, contarPalabras(correo, " enough "))
                .setAttribute(TrecFeatures.enterprise, contarPalabras(correo, " enterprise "))
                .setAttribute(TrecFeatures.eppg, contarPalabras(correo, " eppg "))
                .setAttribute(TrecFeatures.erectile, contarPalabras(correo, " erectile "))
                .setAttribute(TrecFeatures.erection, contarPalabras(correo, " erection "))
                .setAttribute(TrecFeatures.erections, contarPalabras(correo, " erections "))
                .setAttribute(TrecFeatures.error, contarPalabras(correo, " error "))
                .setAttribute(TrecFeatures.es, contarPalabras(correo, " es "))
                .setAttribute(TrecFeatures.esmtp, contarPalabras(correo, " esmtp "))
                .setAttribute(TrecFeatures.established, contarPalabras(correo, " established "))
                .setAttribute(TrecFeatures.evanelists, contarPalabras(correo, " evanelists "))
                .setAttribute(TrecFeatures.evangelical, contarPalabras(correo, " evangelical "))
                .setAttribute(TrecFeatures.even, contarPalabras(correo, " even "))
                .setAttribute(TrecFeatures.ever, contarPalabras(correo, " ever "))
                .setAttribute(TrecFeatures.every, contarPalabras(correo, " every "))
                .setAttribute(TrecFeatures.everyone, contarPalabras(correo, " everyone "))
                .setAttribute(TrecFeatures.everything, contarPalabras(correo, " everything "))
                .setAttribute(TrecFeatures.exercises, contarPalabras(correo, " exercises "))
                .setAttribute(TrecFeatures.existed, contarPalabras(correo, " existed "))
                .setAttribute(TrecFeatures.expected, contarPalabras(correo, " expected "))
                .setAttribute(TrecFeatures.experience, contarPalabras(correo, " experience "))
                .setAttribute(TrecFeatures.express, contarPalabras(correo, " express "))
                .setAttribute(TrecFeatures.exquisite, contarPalabras(correo, " exquisite "))
                .setAttribute(TrecFeatures.extra, contarPalabras(correo, " extra "))
                .setAttribute(TrecFeatures.eyes, contarPalabras(correo, " eyes "))
                .setAttribute(TrecFeatures.face, contarPalabras(correo, " face "))
                .setAttribute(TrecFeatures.fact, contarPalabras(correo, " fact "))
                .setAttribute(TrecFeatures.far, contarPalabras(correo, " far "))
                .setAttribute(TrecFeatures.fast, contarPalabras(correo, " fast "))
                .setAttribute(TrecFeatures.fat, contarPalabras(correo, " fat "))
                .setAttribute(TrecFeatures.fda, contarPalabras(correo, " fda "))
                .setAttribute(TrecFeatures.feel, contarPalabras(correo, " feel "))
                .setAttribute(TrecFeatures.feeling, contarPalabras(correo, " feeling "))
                .setAttribute(TrecFeatures.feet, contarPalabras(correo, " feet "))
                .setAttribute(TrecFeatures.felt, contarPalabras(correo, " felt "))
                .setAttribute(TrecFeatures.few, contarPalabras(correo, " few "))
                .setAttribute(TrecFeatures.field, contarPalabras(correo, " field "))
                .setAttribute(TrecFeatures.fight, contarPalabras(correo, " fight "))
                .setAttribute(TrecFeatures.figure, contarPalabras(correo, " figure "))
                .setAttribute(TrecFeatures.filtered, contarPalabras(correo, " filtered "))
                .setAttribute(TrecFeatures.find, contarPalabras(correo, " find "))
                .setAttribute(TrecFeatures.fine, contarPalabras(correo, " fine "))
                .setAttribute(TrecFeatures.fire, contarPalabras(correo, " fire "))
                .setAttribute(TrecFeatures.first, contarPalabras(correo, " first "))
                .setAttribute(TrecFeatures.fit, contarPalabras(correo, " fit "))
                .setAttribute(TrecFeatures.five, contarPalabras(correo, " five "))
                .setAttribute(TrecFeatures.fiz, contarPalabras(correo, " fiz "))
                .setAttribute(TrecFeatures.flesh, contarPalabras(correo, " flesh "))
                .setAttribute(TrecFeatures.food, contarPalabras(correo, " food "))
                .setAttribute(TrecFeatures.forged, contarPalabras(correo, " forged "))
                .setAttribute(TrecFeatures.forget, contarPalabras(correo, " forget "))
                .setAttribute(TrecFeatures.format, contarPalabras(correo, " format "))
                .setAttribute(TrecFeatures.formula, contarPalabras(correo, " formula "))
                .setAttribute(TrecFeatures.fotografia, contarPalabras(correo, " fotografia "))
                .setAttribute(TrecFeatures.found, contarPalabras(correo, " found "))
                .setAttribute(TrecFeatures.four, contarPalabras(correo, " four "))
                .setAttribute(TrecFeatures.free, contarPalabras(correo, " free "))
                .setAttribute(TrecFeatures.friday, contarPalabras(correo, " friday "))
                .setAttribute(TrecFeatures.friend, contarPalabras(correo, " friend "))
                .setAttribute(TrecFeatures.friends, contarPalabras(correo, " friends "))
                .setAttribute(TrecFeatures.from, contarPalabras(correo, " from "))
                .setAttribute(TrecFeatures.full, contarPalabras(correo, " full "))
                .setAttribute(TrecFeatures.further, contarPalabras(correo, " further "))
                .setAttribute(TrecFeatures.future, contarPalabras(correo, " future "))
                .setAttribute(TrecFeatures.g, contarPalabras(correo, " g "))
                .setAttribute(TrecFeatures.gain, contarPalabras(correo, " gain "))
                .setAttribute(TrecFeatures.game, contarPalabras(correo, " game "))
                .setAttribute(TrecFeatures.games, contarPalabras(correo, " games "))
                .setAttribute(TrecFeatures.gasses, contarPalabras(correo, " gasses "))
                .setAttribute(TrecFeatures.generic, contarPalabras(correo, " generic "))
                .setAttribute(TrecFeatures.get, contarPalabras(correo, " get "))
                .setAttribute(TrecFeatures.getting, contarPalabras(correo, " getting "))
                .setAttribute(TrecFeatures.gift, contarPalabras(correo, " gift "))
                .setAttribute(TrecFeatures.girl, contarPalabras(correo, " girl "))
                .setAttribute(TrecFeatures.give, contarPalabras(correo, " give "))
                .setAttribute(TrecFeatures.giving, contarPalabras(correo, " giving "))
                .setAttribute(TrecFeatures.gnitpick, contarPalabras(correo, " gnitpick "))
                .setAttribute(TrecFeatures.go, contarPalabras(correo, " go "))
                .setAttribute(TrecFeatures.god, contarPalabras(correo, " god "))
                .setAttribute(TrecFeatures.goes, contarPalabras(correo, " goes "))
                .setAttribute(TrecFeatures.going, contarPalabras(correo, " going "))
                .setAttribute(TrecFeatures.gone, contarPalabras(correo, " gone "))
                .setAttribute(TrecFeatures.good, contarPalabras(correo, " good "))
                .setAttribute(TrecFeatures.got, contarPalabras(correo, " got "))
                .setAttribute(TrecFeatures.granted, contarPalabras(correo, " granted "))
                .setAttribute(TrecFeatures.great, contarPalabras(correo, " great "))
                .setAttribute(TrecFeatures.greenhouse, contarPalabras(correo, " greenhouse "))
                .setAttribute(TrecFeatures.greenwood, contarPalabras(correo, " greenwood "))
                .setAttribute(TrecFeatures.group, contarPalabras(correo, " group "))
                .setAttribute(TrecFeatures.groups, contarPalabras(correo, " groups "))
                .setAttribute(TrecFeatures.growing, contarPalabras(correo, " growing "))
                .setAttribute(TrecFeatures.growth, contarPalabras(correo, " growth "))
                .setAttribute(TrecFeatures.grue, contarPalabras(correo, " grue "))
                .setAttribute(TrecFeatures.gte, contarPalabras(correo, " gte "))
                .setAttribute(TrecFeatures.had, contarPalabras(correo, " had "))
                .setAttribute(TrecFeatures.half, contarPalabras(correo, " half "))
                .setAttribute(TrecFeatures.hand, contarPalabras(correo, " hand "))
                .setAttribute(TrecFeatures.hands, contarPalabras(correo, " hands "))
                .setAttribute(TrecFeatures.hans, contarPalabras(correo, " hans "))
                .setAttribute(TrecFeatures.happiest, contarPalabras(correo, " happiest "))
                .setAttribute(TrecFeatures.happy, contarPalabras(correo, " happy "))
                .setAttribute(TrecFeatures.hard, contarPalabras(correo, " hard "))
                .setAttribute(TrecFeatures.has, contarPalabras(correo, " has "))
                .setAttribute(TrecFeatures.hate, contarPalabras(correo, " hate "))
                .setAttribute(TrecFeatures.have, contarPalabras(correo, " have "))
                .setAttribute(TrecFeatures.he, contarPalabras(correo, " he "))
                .setAttribute(TrecFeatures.head, contarPalabras(correo, " head "))
                .setAttribute(TrecFeatures.headline, contarPalabras(correo, " headline "))
                .setAttribute(TrecFeatures.health, contarPalabras(correo, " health "))
                .setAttribute(TrecFeatures.hear, contarPalabras(correo, " hear "))
                .setAttribute(TrecFeatures.heard, contarPalabras(correo, " heard "))
                .setAttribute(TrecFeatures.hellinic, contarPalabras(correo, " hellinic "))
                .setAttribute(TrecFeatures.helo, contarPalabras(correo, " helo "))
                .setAttribute(TrecFeatures.help, contarPalabras(correo, " help "))
                .setAttribute(TrecFeatures.helps, contarPalabras(correo, " helps "))
                .setAttribute(TrecFeatures.helvetica, contarPalabras(correo, " helvetica "))
                .setAttribute(TrecFeatures.her, contarPalabras(correo, " her "))
                .setAttribute(TrecFeatures.herbal, contarPalabras(correo, " herbal "))
                .setAttribute(TrecFeatures.here, contarPalabras(correo, " here "))
                .setAttribute(TrecFeatures.heretic, contarPalabras(correo, " heretic "))
                .setAttribute(TrecFeatures.hgh, contarPalabras(correo, " hgh "))
                .setAttribute(TrecFeatures.highly, contarPalabras(correo, " highly "))
                .setAttribute(TrecFeatures.him, contarPalabras(correo, " him "))
                .setAttribute(TrecFeatures.his, contarPalabras(correo, " his "))
                .setAttribute(TrecFeatures.history, contarPalabras(correo, " history "))
                .setAttribute(TrecFeatures.hold, contarPalabras(correo, " hold "))
                .setAttribute(TrecFeatures.home, contarPalabras(correo, " home "))
                .setAttribute(TrecFeatures.homemaker, contarPalabras(correo, " homemaker "))
                .setAttribute(TrecFeatures.hoodia, contarPalabras(correo, " hoodia "))
                .setAttribute(TrecFeatures.hope, contarPalabras(correo, " hope "))
                .setAttribute(TrecFeatures.hormone, contarPalabras(correo, " hormone "))
                .setAttribute(TrecFeatures.hot, contarPalabras(correo, " hot "))
                .setAttribute(TrecFeatures.hottest, contarPalabras(correo, " hottest "))
                .setAttribute(TrecFeatures.hours, contarPalabras(correo, " hours "))
                .setAttribute(TrecFeatures.house, contarPalabras(correo, " house "))
                .setAttribute(TrecFeatures.how, contarPalabras(correo, " how "))
                .setAttribute(TrecFeatures.however, contarPalabras(correo, " however "))
                .setAttribute(TrecFeatures.html, contarPalabras(correo, " html "))
                .setAttribute(TrecFeatures.human, contarPalabras(correo, " human "))
                .setAttribute(TrecFeatures.i, contarPalabras(correo, " i "))
                .setAttribute(TrecFeatures.im, contarPalabras(correo, " im "))
                .setAttribute(TrecFeatures.image, contarPalabras(correo, " image "))
                .setAttribute(TrecFeatures.importance, contarPalabras(correo, " importance "))
                .setAttribute(TrecFeatures.included, contarPalabras(correo, " included "))
                .setAttribute(TrecFeatures.including, contarPalabras(correo, " including "))
                .setAttribute(TrecFeatures.increased, contarPalabras(correo, " increased "))
                .setAttribute(TrecFeatures.industry, contarPalabras(correo, " industry "))
                .setAttribute(TrecFeatures.ineffective, contarPalabras(correo, " ineffective "))
                .setAttribute(TrecFeatures.influence, contarPalabras(correo, " influence "))
                .setAttribute(TrecFeatures.info, contarPalabras(correo, " info "))
                .setAttribute(TrecFeatures.information, contarPalabras(correo, " information "))
                .setAttribute(TrecFeatures.initiative, contarPalabras(correo, " initiative "))
                .setAttribute(TrecFeatures.inline, contarPalabras(correo, " inline "))
                .setAttribute(TrecFeatures.instantly, contarPalabras(correo, " instantly "))
                .setAttribute(TrecFeatures.instead, contarPalabras(correo, " instead "))
                .setAttribute(TrecFeatures.interest, contarPalabras(correo, " interest "))
                .setAttribute(TrecFeatures.internet, contarPalabras(correo, " internet "))
                .setAttribute(TrecFeatures.into, contarPalabras(correo, " into "))
                .setAttribute(TrecFeatures.is, contarPalabras(correo, " is "))
                .setAttribute(TrecFeatures.isn, contarPalabras(correo, " isn "))
                .setAttribute(TrecFeatures.isna, contarPalabras(correo, " isna "))
                .setAttribute(TrecFeatures.issue, contarPalabras(correo, " issue "))
                .setAttribute(TrecFeatures.it, contarPalabras(correo, " it "))
                .setAttribute(TrecFeatures.its, contarPalabras(correo, " its "))
                .setAttribute(TrecFeatures.jack, contarPalabras(correo, " jack "))
                .setAttribute(TrecFeatures.jesus, contarPalabras(correo, " jesus "))
                .setAttribute(TrecFeatures.jo, contarPalabras(correo, " jo "))
                .setAttribute(TrecFeatures.job, contarPalabras(correo, " job "))
                .setAttribute(TrecFeatures.joe, contarPalabras(correo, " joe "))
                .setAttribute(TrecFeatures.join, contarPalabras(correo, " join "))
                .setAttribute(TrecFeatures.just, contarPalabras(correo, " just "))
                .setAttribute(TrecFeatures.k, contarPalabras(correo, " k "))
                .setAttribute(TrecFeatures.keep, contarPalabras(correo, " keep "))
                .setAttribute(TrecFeatures.kids, contarPalabras(correo, " kids "))
                .setAttribute(TrecFeatures.kilos, contarPalabras(correo, " kilos "))
                .setAttribute(TrecFeatures.kinda, contarPalabras(correo, " kinda "))
                .setAttribute(TrecFeatures.know, contarPalabras(correo, " know "))
                .setAttribute(TrecFeatures.known, contarPalabras(correo, " known "))
                .setAttribute(TrecFeatures.ktwarwic, contarPalabras(correo, " ktwarwic "))
                .setAttribute(TrecFeatures.l, contarPalabras(correo, " l "))
                .setAttribute(TrecFeatures.la, contarPalabras(correo, " la "))
                .setAttribute(TrecFeatures.large, contarPalabras(correo, " large "))
                .setAttribute(TrecFeatures.largest, contarPalabras(correo, " largest "))
                .setAttribute(TrecFeatures.las, contarPalabras(correo, " las "))
                .setAttribute(TrecFeatures.last, contarPalabras(correo, " last "))
                .setAttribute(TrecFeatures.late, contarPalabras(correo, " late "))
                .setAttribute(TrecFeatures.later, contarPalabras(correo, " later "))
                .setAttribute(TrecFeatures.latest, contarPalabras(correo, " latest "))
                .setAttribute(TrecFeatures.learn, contarPalabras(correo, " learn "))
                .setAttribute(TrecFeatures.leave, contarPalabras(correo, " leave "))
                .setAttribute(TrecFeatures.left, contarPalabras(correo, " left "))
                .setAttribute(TrecFeatures.less, contarPalabras(correo, " less "))
                .setAttribute(TrecFeatures.let, contarPalabras(correo, " let "))
                .setAttribute(TrecFeatures.level, contarPalabras(correo, " level "))
                .setAttribute(TrecFeatures.levitra, contarPalabras(correo, " levitra "))
                .setAttribute(TrecFeatures.li, contarPalabras(correo, " li "))
                .setAttribute(TrecFeatures.life, contarPalabras(correo, " life "))
                .setAttribute(TrecFeatures.light, contarPalabras(correo, " light "))
                .setAttribute(TrecFeatures.like, contarPalabras(correo, " like "))
                .setAttribute(TrecFeatures.lines, contarPalabras(correo, " lines "))
                .setAttribute(TrecFeatures.link, contarPalabras(correo, " link "))
                .setAttribute(TrecFeatures.list, contarPalabras(correo, " list "))
                .setAttribute(TrecFeatures.literally, contarPalabras(correo, " literally "))
                .setAttribute(TrecFeatures.little, contarPalabras(correo, " little "))
                .setAttribute(TrecFeatures.live, contarPalabras(correo, " live "))
                .setAttribute(TrecFeatures.lives, contarPalabras(correo, " lives "))
                .setAttribute(TrecFeatures.living, contarPalabras(correo, " living "))
                .setAttribute(TrecFeatures.ll, contarPalabras(correo, " ll "))
                .setAttribute(TrecFeatures.local, contarPalabras(correo, " local "))
                .setAttribute(TrecFeatures.localdomain, contarPalabras(correo, " localdomain "))
                .setAttribute(TrecFeatures.localhost, contarPalabras(correo, " localhost "))
                .setAttribute(TrecFeatures.located, contarPalabras(correo, " located "))
                .setAttribute(TrecFeatures.longer, contarPalabras(correo, " longer "))
                .setAttribute(TrecFeatures.look, contarPalabras(correo, " look "))
                .setAttribute(TrecFeatures.looked, contarPalabras(correo, " looked "))
                .setAttribute(TrecFeatures.looking, contarPalabras(correo, " looking "))
                .setAttribute(TrecFeatures.los, contarPalabras(correo, " los "))
                .setAttribute(TrecFeatures.lose, contarPalabras(correo, " lose "))
                .setAttribute(TrecFeatures.losing, contarPalabras(correo, " losing "))
                .setAttribute(TrecFeatures.loss, contarPalabras(correo, " loss "))
                .setAttribute(TrecFeatures.lot, contarPalabras(correo, " lot "))
                .setAttribute(TrecFeatures.lots, contarPalabras(correo, " lots "))
                .setAttribute(TrecFeatures.love, contarPalabras(correo, " love "))
                .setAttribute(TrecFeatures.low, contarPalabras(correo, " low "))
                .setAttribute(TrecFeatures.lowest, contarPalabras(correo, " lowest "))
                .setAttribute(TrecFeatures.m, contarPalabras(correo, " m "))
                .setAttribute(TrecFeatures.mac, contarPalabras(correo, " mac "))
                .setAttribute(TrecFeatures.macromedia, contarPalabras(correo, " macromedia "))
                .setAttribute(TrecFeatures.made, contarPalabras(correo, " made "))
                .setAttribute(TrecFeatures.mail, contarPalabras(correo, " mail "))
                .setAttribute(TrecFeatures.main, contarPalabras(correo, " main "))
                .setAttribute(TrecFeatures.major, contarPalabras(correo, " major "))
                .setAttribute(TrecFeatures.make, contarPalabras(correo, " make "))
                .setAttribute(TrecFeatures.male, contarPalabras(correo, " male "))
                .setAttribute(TrecFeatures.man, contarPalabras(correo, " man "))
                .setAttribute(TrecFeatures.manager, contarPalabras(correo, " manager "))
                .setAttribute(TrecFeatures.manufacturers, contarPalabras(correo, " manufacturers "))
                .setAttribute(TrecFeatures.many, contarPalabras(correo, " many "))
                .setAttribute(TrecFeatures.mar, contarPalabras(correo, " mar "))
                .setAttribute(TrecFeatures.market, contarPalabras(correo, " market "))
                .setAttribute(TrecFeatures.marriage, contarPalabras(correo, " marriage "))
                .setAttribute(TrecFeatures.matter, contarPalabras(correo, " matter "))
                .setAttribute(TrecFeatures.may, contarPalabras(correo, " may "))
                .setAttribute(TrecFeatures.me, contarPalabras(correo, " me "))
                .setAttribute(TrecFeatures.means, contarPalabras(correo, " means "))
                .setAttribute(TrecFeatures.medications, contarPalabras(correo, " medications "))
                .setAttribute(TrecFeatures.meds, contarPalabras(correo, " meds "))
                .setAttribute(TrecFeatures.meet, contarPalabras(correo, " meet "))
                .setAttribute(TrecFeatures.memory, contarPalabras(correo, " memory "))
                .setAttribute(TrecFeatures.men, contarPalabras(correo, " men "))
                .setAttribute(TrecFeatures.meridia, contarPalabras(correo, " meridia "))
                .setAttribute(TrecFeatures.message, contarPalabras(correo, " message "))
                .setAttribute(TrecFeatures.met, contarPalabras(correo, " met "))
                .setAttribute(TrecFeatures.microsoft, contarPalabras(correo, " microsoft "))
                .setAttribute(TrecFeatures.mid, contarPalabras(correo, " mid "))
                .setAttribute(TrecFeatures.middle, contarPalabras(correo, " middle "))
                .setAttribute(TrecFeatures.might, contarPalabras(correo, " might "))
                .setAttribute(TrecFeatures.million, contarPalabras(correo, " million "))
                .setAttribute(TrecFeatures.millions, contarPalabras(correo, " millions "))
                .setAttribute(TrecFeatures.mimeole, contarPalabras(correo, " mimeole "))
                .setAttribute(TrecFeatures.mind, contarPalabras(correo, " mind "))
                .setAttribute(TrecFeatures.minos, contarPalabras(correo, " minos "))
                .setAttribute(TrecFeatures.minutes, contarPalabras(correo, " minutes "))
                .setAttribute(TrecFeatures.miss, contarPalabras(correo, " miss "))
                .setAttribute(TrecFeatures.modern, contarPalabras(correo, " modern "))
                .setAttribute(TrecFeatures.mom, contarPalabras(correo, " mom "))
                .setAttribute(TrecFeatures.moment, contarPalabras(correo, " moment "))
                .setAttribute(TrecFeatures.mon, contarPalabras(correo, " mon "))
                .setAttribute(TrecFeatures.money, contarPalabras(correo, " money "))
                .setAttribute(TrecFeatures.months, contarPalabras(correo, " months "))
                .setAttribute(TrecFeatures.mood, contarPalabras(correo, " mood "))
                .setAttribute(TrecFeatures.more, contarPalabras(correo, " more "))
                .setAttribute(TrecFeatures.most, contarPalabras(correo, " most "))
                .setAttribute(TrecFeatures.mother, contarPalabras(correo, " mother "))
                .setAttribute(TrecFeatures.mouse, contarPalabras(correo, " mouse "))
                .setAttribute(TrecFeatures.mr, contarPalabras(correo, " mr "))
                .setAttribute(TrecFeatures.ms, contarPalabras(correo, " ms "))
                .setAttribute(TrecFeatures.mso, contarPalabras(correo, " mso "))
                .setAttribute(TrecFeatures.msonormal, contarPalabras(correo, " msonormal "))
                .setAttribute(TrecFeatures.much, contarPalabras(correo, " much "))
                .setAttribute(TrecFeatures.music, contarPalabras(correo, " music "))
                .setAttribute(TrecFeatures.must, contarPalabras(correo, " must "))
                .setAttribute(TrecFeatures.my, contarPalabras(correo, " my "))
                .setAttribute(TrecFeatures.myself, contarPalabras(correo, " myself "))
                .setAttribute(TrecFeatures.n, contarPalabras(correo, " n "))
                .setAttribute(TrecFeatures.na, contarPalabras(correo, " na "))
                .setAttribute(TrecFeatures.name, contarPalabras(correo, " name "))
                .setAttribute(TrecFeatures.nation, contarPalabras(correo, " nation "))
                .setAttribute(TrecFeatures.national, contarPalabras(correo, " national "))
                .setAttribute(TrecFeatures.natural, contarPalabras(correo, " natural "))
                .setAttribute(TrecFeatures.near, contarPalabras(correo, " near "))
                .setAttribute(TrecFeatures.need, contarPalabras(correo, " need "))
                .setAttribute(TrecFeatures.needed, contarPalabras(correo, " needed "))
                .setAttribute(TrecFeatures.needs, contarPalabras(correo, " needs "))
                .setAttribute(TrecFeatures.net, contarPalabras(correo, " net "))
                .setAttribute(TrecFeatures.network, contarPalabras(correo, " network "))
                .setAttribute(TrecFeatures.never, contarPalabras(correo, " never "))
                .setAttribute(TrecFeatures.news, contarPalabras(correo, " news "))
                .setAttribute(TrecFeatures.next, contarPalabras(correo, " next "))
                .setAttribute(TrecFeatures.nice, contarPalabras(correo, " nice "))
                .setAttribute(TrecFeatures.night, contarPalabras(correo, " night "))
                .setAttribute(TrecFeatures.no, contarPalabras(correo, " no "))
                .setAttribute(TrecFeatures.none, contarPalabras(correo, " none "))
                .setAttribute(TrecFeatures.nor, contarPalabras(correo, " nor "))
                .setAttribute(TrecFeatures.normal, contarPalabras(correo, " normal "))
                .setAttribute(TrecFeatures.north, contarPalabras(correo, " north "))
                .setAttribute(TrecFeatures.nosave, contarPalabras(correo, " nosave "))
                .setAttribute(TrecFeatures.nose, contarPalabras(correo, " nose "))
                .setAttribute(TrecFeatures.not, contarPalabras(correo, " not "))
                .setAttribute(TrecFeatures.nothing, contarPalabras(correo, " nothing "))
                .setAttribute(TrecFeatures.now, contarPalabras(correo, " now "))
                .setAttribute(TrecFeatures.number, contarPalabras(correo, " number "))
                .setAttribute(TrecFeatures.o, contarPalabras(correo, " o "))
                .setAttribute(TrecFeatures.odm, contarPalabras(correo, " odm "))
                .setAttribute(TrecFeatures.oem, contarPalabras(correo, " oem "))
                .setAttribute(TrecFeatures.of, contarPalabras(correo, " of "))
                .setAttribute(TrecFeatures.off, contarPalabras(correo, " off "))
                .setAttribute(TrecFeatures.offer, contarPalabras(correo, " offer "))
                .setAttribute(TrecFeatures.offers, contarPalabras(correo, " offers "))
                .setAttribute(TrecFeatures.office, contarPalabras(correo, " office "))
                .setAttribute(TrecFeatures.often, contarPalabras(correo, " often "))
                .setAttribute(TrecFeatures.oh, contarPalabras(correo, " oh "))
                .setAttribute(TrecFeatures.old, contarPalabras(correo, " old "))
                .setAttribute(TrecFeatures.once, contarPalabras(correo, " once "))
                .setAttribute(TrecFeatures.one, contarPalabras(correo, " one "))
                .setAttribute(TrecFeatures.ones, contarPalabras(correo, " ones "))
                .setAttribute(TrecFeatures.online, contarPalabras(correo, " online "))
                .setAttribute(TrecFeatures.only, contarPalabras(correo, " only "))
                .setAttribute(TrecFeatures.ont, contarPalabras(correo, " ont "))
                .setAttribute(TrecFeatures.opportunity, contarPalabras(correo, " opportunity "))
                .setAttribute(TrecFeatures.optical, contarPalabras(correo, " optical "))
                .setAttribute(TrecFeatures.or, contarPalabras(correo, " or "))
                .setAttribute(TrecFeatures.order, contarPalabras(correo, " order "))
                .setAttribute(TrecFeatures.original, contarPalabras(correo, " original "))
                .setAttribute(TrecFeatures.other, contarPalabras(correo, " other "))
                .setAttribute(TrecFeatures.others, contarPalabras(correo, " others "))
                .setAttribute(TrecFeatures.our, contarPalabras(correo, " our "))
                .setAttribute(TrecFeatures.out, contarPalabras(correo, " out "))
                .setAttribute(TrecFeatures.outlook, contarPalabras(correo, " outlook "))
                .setAttribute(TrecFeatures.over, contarPalabras(correo, " over "))
                .setAttribute(TrecFeatures.own, contarPalabras(correo, " own "))
                .setAttribute(TrecFeatures.p, contarPalabras(correo, " p "))
                .setAttribute(TrecFeatures.paganism, contarPalabras(correo, " paganism "))
                .setAttribute(TrecFeatures.page, contarPalabras(correo, " page "))
                .setAttribute(TrecFeatures.paid, contarPalabras(correo, " paid "))
                .setAttribute(TrecFeatures.para, contarPalabras(correo, " para "))
                .setAttribute(TrecFeatures.part, contarPalabras(correo, " part "))
                .setAttribute(TrecFeatures.partners, contarPalabras(correo, " partners "))
                .setAttribute(TrecFeatures.passed, contarPalabras(correo, " passed "))
                .setAttribute(TrecFeatures.passive, contarPalabras(correo, " passive "))
                .setAttribute(TrecFeatures.past, contarPalabras(correo, " past "))
                .setAttribute(TrecFeatures.paths, contarPalabras(correo, " paths "))
                .setAttribute(TrecFeatures.patients, contarPalabras(correo, " patients "))
                .setAttribute(TrecFeatures.pay, contarPalabras(correo, " pay "))
                .setAttribute(TrecFeatures.peace, contarPalabras(correo, " peace "))
                .setAttribute(TrecFeatures.penis, contarPalabras(correo, " penis "))
                .setAttribute(TrecFeatures.people, contarPalabras(correo, " people "))
                .setAttribute(TrecFeatures.per, contarPalabras(correo, " per "))
                .setAttribute(TrecFeatures.perfect, contarPalabras(correo, " perfect "))
                .setAttribute(TrecFeatures.person, contarPalabras(correo, " person "))
                .setAttribute(TrecFeatures.personal, contarPalabras(correo, " personal "))
                .setAttribute(TrecFeatures.peter, contarPalabras(correo, " peter "))
                .setAttribute(TrecFeatures.pharmacies, contarPalabras(correo, " pharmacies "))
                .setAttribute(TrecFeatures.pharmacy, contarPalabras(correo, " pharmacy "))
                .setAttribute(TrecFeatures.pick, contarPalabras(correo, " pick "))
                .setAttribute(TrecFeatures.piece, contarPalabras(correo, " piece "))
                .setAttribute(TrecFeatures.pills, contarPalabras(correo, " pills "))
                .setAttribute(TrecFeatures.place, contarPalabras(correo, " place "))
                .setAttribute(TrecFeatures.plan, contarPalabras(correo, " plan "))
                .setAttribute(TrecFeatures.plant, contarPalabras(correo, " plant "))
                .setAttribute(TrecFeatures.play, contarPalabras(correo, " play "))
                .setAttribute(TrecFeatures.please, contarPalabras(correo, " please "))
                .setAttribute(TrecFeatures.plg, contarPalabras(correo, " plg "))
                .setAttribute(TrecFeatures.pm, contarPalabras(correo, " pm "))
                .setAttribute(TrecFeatures.point, contarPalabras(correo, " point "))
                .setAttribute(TrecFeatures.pollute, contarPalabras(correo, " pollute "))
                .setAttribute(TrecFeatures.popular, contarPalabras(correo, " popular "))
                .setAttribute(TrecFeatures.population, contarPalabras(correo, " population "))
                .setAttribute(TrecFeatures.por, contarPalabras(correo, " por "))
                .setAttribute(TrecFeatures.pose, contarPalabras(correo, " pose "))
                .setAttribute(TrecFeatures.possibly, contarPalabras(correo, " possibly "))
                .setAttribute(TrecFeatures.posted, contarPalabras(correo, " posted "))
                .setAttribute(TrecFeatures.pounds, contarPalabras(correo, " pounds "))
                .setAttribute(TrecFeatures.power, contarPalabras(correo, " power "))
                .setAttribute(TrecFeatures.powerful, contarPalabras(correo, " powerful "))
                .setAttribute(TrecFeatures.prescription, contarPalabras(correo, " prescription "))
                .setAttribute(TrecFeatures.pretty, contarPalabras(correo, " pretty "))
                .setAttribute(TrecFeatures.price, contarPalabras(correo, " price "))
                .setAttribute(TrecFeatures.prices, contarPalabras(correo, " prices "))
                .setAttribute(TrecFeatures.pro, contarPalabras(correo, " pro "))
                .setAttribute(TrecFeatures.problem, contarPalabras(correo, " problem "))
                .setAttribute(TrecFeatures.problems, contarPalabras(correo, " problems "))
                .setAttribute(TrecFeatures.procedures, contarPalabras(correo, " procedures "))
                .setAttribute(TrecFeatures.produced, contarPalabras(correo, " produced "))
                .setAttribute(TrecFeatures.product, contarPalabras(correo, " product "))
                .setAttribute(TrecFeatures.products, contarPalabras(correo, " products "))
                .setAttribute(TrecFeatures.professional, contarPalabras(correo, " professional "))
                .setAttribute(TrecFeatures.profit, contarPalabras(correo, " profit "))
                .setAttribute(TrecFeatures.program, contarPalabras(correo, " program "))
                .setAttribute(TrecFeatures.propecia, contarPalabras(correo, " propecia "))
                .setAttribute(TrecFeatures.prosperous, contarPalabras(correo, " prosperous "))
                .setAttribute(TrecFeatures.provide, contarPalabras(correo, " provide "))
                .setAttribute(TrecFeatures.psyche, contarPalabras(correo, " psyche "))
                .setAttribute(TrecFeatures.psycho, contarPalabras(correo, " psycho "))
                .setAttribute(TrecFeatures.pumps, contarPalabras(correo, " pumps "))
                .setAttribute(TrecFeatures.purchase, contarPalabras(correo, " purchase "))
                .setAttribute(TrecFeatures.purple, contarPalabras(correo, " purple "))
                .setAttribute(TrecFeatures.put, contarPalabras(correo, " put "))
                .setAttribute(TrecFeatures.qmail, contarPalabras(correo, " qmail "))
                .setAttribute(TrecFeatures.quality, contarPalabras(correo, " quality "))
                .setAttribute(TrecFeatures.que, contarPalabras(correo, " que "))
                .setAttribute(TrecFeatures.quick, contarPalabras(correo, " quick "))
                .setAttribute(TrecFeatures.quite, contarPalabras(correo, " quite "))
                .setAttribute(TrecFeatures.r, contarPalabras(correo, " r "))
                .setAttribute(TrecFeatures.raise, contarPalabras(correo, " raise "))
                .setAttribute(TrecFeatures.rather, contarPalabras(correo, " rather "))
                .setAttribute(TrecFeatures.re, contarPalabras(correo, " re "))
                .setAttribute(TrecFeatures.read, contarPalabras(correo, " read "))
                .setAttribute(TrecFeatures.ready, contarPalabras(correo, " ready "))
                .setAttribute(TrecFeatures.real, contarPalabras(correo, " real "))
                .setAttribute(TrecFeatures.really, contarPalabras(correo, " really "))
                .setAttribute(TrecFeatures.reboot, contarPalabras(correo, " reboot "))
                .setAttribute(TrecFeatures.receive, contarPalabras(correo, " receive "))
                .setAttribute(TrecFeatures.record, contarPalabras(correo, " record "))
                .setAttribute(TrecFeatures.red, contarPalabras(correo, " red "))
                .setAttribute(TrecFeatures.ref, contarPalabras(correo, " ref "))
                .setAttribute(TrecFeatures.refinance, contarPalabras(correo, " refinance "))
                .setAttribute(TrecFeatures.regards, contarPalabras(correo, " regards "))
                .setAttribute(TrecFeatures.released, contarPalabras(correo, " released "))
                .setAttribute(TrecFeatures.religions, contarPalabras(correo, " religions "))
                .setAttribute(TrecFeatures.religious, contarPalabras(correo, " religious "))
                .setAttribute(TrecFeatures.remember, contarPalabras(correo, " remember "))
                .setAttribute(TrecFeatures.replica, contarPalabras(correo, " replica "))
                .setAttribute(TrecFeatures.report, contarPalabras(correo, " report "))
                .setAttribute(TrecFeatures.respond, contarPalabras(correo, " respond "))
                .setAttribute(TrecFeatures.response, contarPalabras(correo, " response "))
                .setAttribute(TrecFeatures.result, contarPalabras(correo, " result "))
                .setAttribute(TrecFeatures.results, contarPalabras(correo, " results "))
                .setAttribute(TrecFeatures.reviews, contarPalabras(correo, " reviews "))
                .setAttribute(TrecFeatures.rich, contarPalabras(correo, " rich "))
                .setAttribute(TrecFeatures.right, contarPalabras(correo, " right "))
                .setAttribute(TrecFeatures.ro, contarPalabras(correo, " ro "))
                .setAttribute(TrecFeatures.rock, contarPalabras(correo, " rock "))
                .setAttribute(TrecFeatures.roman, contarPalabras(correo, " roman "))
                .setAttribute(TrecFeatures.royal, contarPalabras(correo, " royal "))
                .setAttribute(TrecFeatures.run, contarPalabras(correo, " run "))
                .setAttribute(TrecFeatures.s, contarPalabras(correo, " s "))
                .setAttribute(TrecFeatures.safe, contarPalabras(correo, " safe "))
                .setAttribute(TrecFeatures.said, contarPalabras(correo, " said "))
                .setAttribute(TrecFeatures.sales, contarPalabras(correo, " sales "))
                .setAttribute(TrecFeatures.same, contarPalabras(correo, " same "))
                .setAttribute(TrecFeatures.sat, contarPalabras(correo, " sat "))
                .setAttribute(TrecFeatures.save, contarPalabras(correo, " save "))
                .setAttribute(TrecFeatures.saved, contarPalabras(correo, " saved "))
                .setAttribute(TrecFeatures.say, contarPalabras(correo, " say "))
                .setAttribute(TrecFeatures.says, contarPalabras(correo, " says "))
                .setAttribute(TrecFeatures.school, contarPalabras(correo, " school "))
                .setAttribute(TrecFeatures.se, contarPalabras(correo, " se "))
                .setAttribute(TrecFeatures.search, contarPalabras(correo, " search "))
                .setAttribute(TrecFeatures.second, contarPalabras(correo, " second "))
                .setAttribute(TrecFeatures.see, contarPalabras(correo, " see "))
                .setAttribute(TrecFeatures.seem, contarPalabras(correo, " seem "))
                .setAttribute(TrecFeatures.seemed, contarPalabras(correo, " seemed "))
                .setAttribute(TrecFeatures.seen, contarPalabras(correo, " seen "))
                .setAttribute(TrecFeatures.send, contarPalabras(correo, " send "))
                .setAttribute(TrecFeatures.sense, contarPalabras(correo, " sense "))
                .setAttribute(TrecFeatures.sent, contarPalabras(correo, " sent "))
                .setAttribute(TrecFeatures.sentence, contarPalabras(correo, " sentence "))
                .setAttribute(TrecFeatures.series, contarPalabras(correo, " series "))
                .setAttribute(TrecFeatures.service, contarPalabras(correo, " service "))
                .setAttribute(TrecFeatures.services, contarPalabras(correo, " services "))
                .setAttribute(TrecFeatures.set, contarPalabras(correo, " set "))
                .setAttribute(TrecFeatures.several, contarPalabras(correo, " several "))
                .setAttribute(TrecFeatures.sex, contarPalabras(correo, " sex "))
                .setAttribute(TrecFeatures.sexual, contarPalabras(correo, " sexual "))
                .setAttribute(TrecFeatures.shall, contarPalabras(correo, " shall "))
                .setAttribute(TrecFeatures.shamanism, contarPalabras(correo, " shamanism "))
                .setAttribute(TrecFeatures.share, contarPalabras(correo, " share "))
                .setAttribute(TrecFeatures.she, contarPalabras(correo, " she "))
                .setAttribute(TrecFeatures.shed, contarPalabras(correo, " shed "))
                .setAttribute(TrecFeatures.shipping, contarPalabras(correo, " shipping "))
                .setAttribute(TrecFeatures.shoes, contarPalabras(correo, " shoes "))
                .setAttribute(TrecFeatures.shop, contarPalabras(correo, " shop "))
                .setAttribute(TrecFeatures.should, contarPalabras(correo, " should "))
                .setAttribute(TrecFeatures.show, contarPalabras(correo, " show "))
                .setAttribute(TrecFeatures.showed, contarPalabras(correo, " showed "))
                .setAttribute(TrecFeatures.side, contarPalabras(correo, " side "))
                .setAttribute(TrecFeatures.sign, contarPalabras(correo, " sign "))
                .setAttribute(TrecFeatures.sin, contarPalabras(correo, " sin "))
                .setAttribute(TrecFeatures.since, contarPalabras(correo, " since "))
                .setAttribute(TrecFeatures.sir, contarPalabras(correo, " sir "))
                .setAttribute(TrecFeatures.site, contarPalabras(correo, " site "))
                .setAttribute(TrecFeatures.small, contarPalabras(correo, " small "))
                .setAttribute(TrecFeatures.smtp, contarPalabras(correo, " smtp "))
                .setAttribute(TrecFeatures.so, contarPalabras(correo, " so "))
                .setAttribute(TrecFeatures.social, contarPalabras(correo, " social "))
                .setAttribute(TrecFeatures.society, contarPalabras(correo, " society "))
                .setAttribute(TrecFeatures.soft, contarPalabras(correo, " soft "))
                .setAttribute(TrecFeatures.software, contarPalabras(correo, " software "))
                .setAttribute(TrecFeatures.solid, contarPalabras(correo, " solid "))
                .setAttribute(TrecFeatures.soma, contarPalabras(correo, " soma "))
                .setAttribute(TrecFeatures.some, contarPalabras(correo, " some "))
                .setAttribute(TrecFeatures.something, contarPalabras(correo, " something "))
                .setAttribute(TrecFeatures.soon, contarPalabras(correo, " soon "))
                .setAttribute(TrecFeatures.sounds, contarPalabras(correo, " sounds "))
                .setAttribute(TrecFeatures.source, contarPalabras(correo, " source "))
                .setAttribute(TrecFeatures.south, contarPalabras(correo, " south "))
                .setAttribute(TrecFeatures.space, contarPalabras(correo, " space "))
                .setAttribute(TrecFeatures.span, contarPalabras(correo, " span "))
                .setAttribute(TrecFeatures.special, contarPalabras(correo, " special "))
                .setAttribute(TrecFeatures.speedy, contarPalabras(correo, " speedy "))
                .setAttribute(TrecFeatures.spirit, contarPalabras(correo, " spirit "))
                .setAttribute(TrecFeatures.spirits, contarPalabras(correo, " spirits "))
                .setAttribute(TrecFeatures.spiritual, contarPalabras(correo, " spiritual "))
                .setAttribute(TrecFeatures.spring, contarPalabras(correo, " spring "))
                .setAttribute(TrecFeatures.st, contarPalabras(correo, " st "))
                .setAttribute(TrecFeatures.start, contarPalabras(correo, " start "))
                .setAttribute(TrecFeatures.started, contarPalabras(correo, " started "))
                .setAttribute(TrecFeatures.state, contarPalabras(correo, " state "))
                .setAttribute(TrecFeatures.states, contarPalabras(correo, " states "))
                .setAttribute(TrecFeatures.status, contarPalabras(correo, " status "))
                .setAttribute(TrecFeatures.stay, contarPalabras(correo, " stay "))
                .setAttribute(TrecFeatures.still, contarPalabras(correo, " still "))
                .setAttribute(TrecFeatures.stop, contarPalabras(correo, " stop "))
                .setAttribute(TrecFeatures.store, contarPalabras(correo, " store "))
                .setAttribute(TrecFeatures.strange, contarPalabras(correo, " strange "))
                .setAttribute(TrecFeatures.street, contarPalabras(correo, " street "))
                .setAttribute(TrecFeatures.strong, contarPalabras(correo, " strong "))
                .setAttribute(TrecFeatures.strongmail, contarPalabras(correo, " strongmail "))
                .setAttribute(TrecFeatures.studio, contarPalabras(correo, " studio "))
                .setAttribute(TrecFeatures.style, contarPalabras(correo, " style "))
                .setAttribute(TrecFeatures.subject, contarPalabras(correo, " subject "))
                .setAttribute(TrecFeatures.submit, contarPalabras(correo, " submit "))
                .setAttribute(TrecFeatures.such, contarPalabras(correo, " such "))
                .setAttribute(TrecFeatures.suite, contarPalabras(correo, " suite "))
                .setAttribute(TrecFeatures.summer, contarPalabras(correo, " summer "))
                .setAttribute(TrecFeatures.sums, contarPalabras(correo, " sums "))
                .setAttribute(TrecFeatures.sun, contarPalabras(correo, " sun "))
                .setAttribute(TrecFeatures.support, contarPalabras(correo, " support "))
                .setAttribute(TrecFeatures.sure, contarPalabras(correo, " sure "))
                .setAttribute(TrecFeatures.sym, contarPalabras(correo, " sym "))
                .setAttribute(TrecFeatures.system, contarPalabras(correo, " system "))
                .setAttribute(TrecFeatures.t, contarPalabras(correo, " t "))
                .setAttribute(TrecFeatures.tablet, contarPalabras(correo, " tablet "))
                .setAttribute(TrecFeatures.tabs, contarPalabras(correo, " tabs "))
                .setAttribute(TrecFeatures.take, contarPalabras(correo, " take "))
                .setAttribute(TrecFeatures.taking, contarPalabras(correo, " taking "))
                .setAttribute(TrecFeatures.talk, contarPalabras(correo, " talk "))
                .setAttribute(TrecFeatures.target, contarPalabras(correo, " target "))
                .setAttribute(TrecFeatures.tax, contarPalabras(correo, " tax "))
                .setAttribute(TrecFeatures.taxes, contarPalabras(correo, " taxes "))
                .setAttribute(TrecFeatures.techniques, contarPalabras(correo, " techniques "))
                .setAttribute(TrecFeatures.technology, contarPalabras(correo, " technology "))
                .setAttribute(TrecFeatures.tell, contarPalabras(correo, " tell "))
                .setAttribute(TrecFeatures.terminology, contarPalabras(correo, " terminology "))
                .setAttribute(TrecFeatures.text, contarPalabras(correo, " text "))
                .setAttribute(TrecFeatures.th, contarPalabras(correo, " th "))
                .setAttribute(TrecFeatures.than, contarPalabras(correo, " than "))
                .setAttribute(TrecFeatures.thank, contarPalabras(correo, " thank "))
                .setAttribute(TrecFeatures.thanks, contarPalabras(correo, " thanks "))
                .setAttribute(TrecFeatures.that, contarPalabras(correo, " that "))
                .setAttribute(TrecFeatures.the, contarPalabras(correo, " the "))
                .setAttribute(TrecFeatures.their, contarPalabras(correo, " their "))
                .setAttribute(TrecFeatures.them, contarPalabras(correo, " them "))
                .setAttribute(TrecFeatures.then, contarPalabras(correo, " then "))
                .setAttribute(TrecFeatures.theories, contarPalabras(correo, " theories "))
                .setAttribute(TrecFeatures.theorize, contarPalabras(correo, " theorize "))
                .setAttribute(TrecFeatures.there, contarPalabras(correo, " there "))
                .setAttribute(TrecFeatures.these, contarPalabras(correo, " these "))
                .setAttribute(TrecFeatures.they, contarPalabras(correo, " they "))
                .setAttribute(TrecFeatures.thing, contarPalabras(correo, " thing "))
                .setAttribute(TrecFeatures.things, contarPalabras(correo, " things "))
                .setAttribute(TrecFeatures.think, contarPalabras(correo, " think "))
                .setAttribute(TrecFeatures.thinking, contarPalabras(correo, " thinking "))
                .setAttribute(TrecFeatures.those, contarPalabras(correo, " those "))
                .setAttribute(TrecFeatures.though, contarPalabras(correo, " though "))
                .setAttribute(TrecFeatures.thought, contarPalabras(correo, " thought "))
                .setAttribute(TrecFeatures.thousands, contarPalabras(correo, " thousands "))
                .setAttribute(TrecFeatures.threats, contarPalabras(correo, " threats "))
                .setAttribute(TrecFeatures.three, contarPalabras(correo, " three "))
                .setAttribute(TrecFeatures.through, contarPalabras(correo, " through "))
                .setAttribute(TrecFeatures.thunderbird, contarPalabras(correo, " thunderbird "))
                .setAttribute(TrecFeatures.till, contarPalabras(correo, " till "))
                .setAttribute(TrecFeatures.time, contarPalabras(correo, " time "))
                .setAttribute(TrecFeatures.today, contarPalabras(correo, " today "))
                .setAttribute(TrecFeatures.together, contarPalabras(correo, " together "))
                .setAttribute(TrecFeatures.told, contarPalabras(correo, " told "))
                .setAttribute(TrecFeatures.too, contarPalabras(correo, " too "))
                .setAttribute(TrecFeatures.took, contarPalabras(correo, " took "))
                .setAttribute(TrecFeatures.top, contarPalabras(correo, " top "))
                .setAttribute(TrecFeatures.town, contarPalabras(correo, " town "))
                .setAttribute(TrecFeatures.trade, contarPalabras(correo, " trade "))
                .setAttribute(TrecFeatures.tramadol, contarPalabras(correo, " tramadol "))
                .setAttribute(TrecFeatures.treat, contarPalabras(correo, " treat "))
                .setAttribute(TrecFeatures.trebuchet, contarPalabras(correo, " trebuchet "))
                .setAttribute(TrecFeatures.tried, contarPalabras(correo, " tried "))
                .setAttribute(TrecFeatures.troubling, contarPalabras(correo, " troubling "))
                .setAttribute(TrecFeatures.trying, contarPalabras(correo, " trying "))
                .setAttribute(TrecFeatures.tue, contarPalabras(correo, " tue "))
                .setAttribute(TrecFeatures.turn, contarPalabras(correo, " turn "))
                .setAttribute(TrecFeatures.turned, contarPalabras(correo, " turned "))
                .setAttribute(TrecFeatures.turning, contarPalabras(correo, " turning "))
                .setAttribute(TrecFeatures.tutorials, contarPalabras(correo, " tutorials "))
                .setAttribute(TrecFeatures.tv, contarPalabras(correo, " tv "))
                .setAttribute(TrecFeatures.two, contarPalabras(correo, " two "))
                .setAttribute(TrecFeatures.txp, contarPalabras(correo, " txp "))
                .setAttribute(TrecFeatures.u, contarPalabras(correo, " u "))
                .setAttribute(TrecFeatures.uid, contarPalabras(correo, " uid "))
                .setAttribute(TrecFeatures.ultimate, contarPalabras(correo, " ultimate "))
                .setAttribute(TrecFeatures.un, contarPalabras(correo, " un "))
                .setAttribute(TrecFeatures.under, contarPalabras(correo, " under "))
                .setAttribute(TrecFeatures.united, contarPalabras(correo, " united "))
                .setAttribute(TrecFeatures.unknown, contarPalabras(correo, " unknown "))
                .setAttribute(TrecFeatures.until, contarPalabras(correo, " until "))
                .setAttribute(TrecFeatures.up, contarPalabras(correo, " up "))
                .setAttribute(TrecFeatures.upon, contarPalabras(correo, " upon "))
                .setAttribute(TrecFeatures.upto, contarPalabras(correo, " upto "))
                .setAttribute(TrecFeatures.us, contarPalabras(correo, " us "))
                .setAttribute(TrecFeatures.usdrugs, contarPalabras(correo, " usdrugs "))
                .setAttribute(TrecFeatures.use, contarPalabras(correo, " use "))
                .setAttribute(TrecFeatures.used, contarPalabras(correo, " used "))
                .setAttribute(TrecFeatures.using, contarPalabras(correo, " using "))
                .setAttribute(TrecFeatures.v, contarPalabras(correo, " v "))
                .setAttribute(TrecFeatures.valued, contarPalabras(correo, " valued "))
                .setAttribute(TrecFeatures.ve, contarPalabras(correo, " ve "))
                .setAttribute(TrecFeatures.verdana, contarPalabras(correo, " verdana "))
                .setAttribute(TrecFeatures.version, contarPalabras(correo, " version "))
                .setAttribute(TrecFeatures.very, contarPalabras(correo, " very "))
                .setAttribute(TrecFeatures.viagra, contarPalabras(correo, " viagra "))
                .setAttribute(TrecFeatures.videos, contarPalabras(correo, " videos "))
                .setAttribute(TrecFeatures.views, contarPalabras(correo, " views "))
                .setAttribute(TrecFeatures.village, contarPalabras(correo, " village "))
                .setAttribute(TrecFeatures.vip, contarPalabras(correo, " vip "))
                .setAttribute(TrecFeatures.virtual, contarPalabras(correo, " virtual "))
                .setAttribute(TrecFeatures.visit, contarPalabras(correo, " visit "))
                .setAttribute(TrecFeatures.vista, contarPalabras(correo, " vista "))
                .setAttribute(TrecFeatures.voice, contarPalabras(correo, " voice "))
                .setAttribute(TrecFeatures.wait, contarPalabras(correo, " wait "))
                .setAttribute(TrecFeatures.walking, contarPalabras(correo, " walking "))
                .setAttribute(TrecFeatures.want, contarPalabras(correo, " want "))
                .setAttribute(TrecFeatures.war, contarPalabras(correo, " war "))
                .setAttribute(TrecFeatures.was, contarPalabras(correo, " was "))
                .setAttribute(TrecFeatures.waste, contarPalabras(correo, " waste "))
                .setAttribute(TrecFeatures.watch, contarPalabras(correo, " watch "))
                .setAttribute(TrecFeatures.watches, contarPalabras(correo, " watches "))
                .setAttribute(TrecFeatures.way, contarPalabras(correo, " way "))
                .setAttribute(TrecFeatures.we, contarPalabras(correo, " we "))
                .setAttribute(TrecFeatures.web, contarPalabras(correo, " web "))
                .setAttribute(TrecFeatures.website, contarPalabras(correo, " website "))
                .setAttribute(TrecFeatures.week, contarPalabras(correo, " week "))
                .setAttribute(TrecFeatures.weight, contarPalabras(correo, " weight "))
                .setAttribute(TrecFeatures.well, contarPalabras(correo, " well "))
                .setAttribute(TrecFeatures.wendy, contarPalabras(correo, " wendy "))
                .setAttribute(TrecFeatures.went, contarPalabras(correo, " went "))
                .setAttribute(TrecFeatures.were, contarPalabras(correo, " were "))
                .setAttribute(TrecFeatures.what, contarPalabras(correo, " what "))
                .setAttribute(TrecFeatures.when, contarPalabras(correo, " when "))
                .setAttribute(TrecFeatures.where, contarPalabras(correo, " where "))
                .setAttribute(TrecFeatures.whether, contarPalabras(correo, " whether "))
                .setAttribute(TrecFeatures.which, contarPalabras(correo, " which "))
                .setAttribute(TrecFeatures.white, contarPalabras(correo, " white "))
                .setAttribute(TrecFeatures.who, contarPalabras(correo, " who "))
                .setAttribute(TrecFeatures.whole, contarPalabras(correo, " whole "))
                .setAttribute(TrecFeatures.whom, contarPalabras(correo, " whom "))
                .setAttribute(TrecFeatures.why, contarPalabras(correo, " why "))
                .setAttribute(TrecFeatures.wiccan, contarPalabras(correo, " wiccan "))
                .setAttribute(TrecFeatures.wider, contarPalabras(correo, " wider "))
                .setAttribute(TrecFeatures.wife, contarPalabras(correo, " wife "))
                .setAttribute(TrecFeatures.will, contarPalabras(correo, " will "))
                .setAttribute(TrecFeatures.windows, contarPalabras(correo, " windows "))
                .setAttribute(TrecFeatures.windowtext, contarPalabras(correo, " windowtext "))
                .setAttribute(TrecFeatures.wish, contarPalabras(correo, " wish "))
                .setAttribute(TrecFeatures.with, contarPalabras(correo, " with "))
                .setAttribute(TrecFeatures.without, contarPalabras(correo, " without "))
                .setAttribute(TrecFeatures.woman, contarPalabras(correo, " woman "))
                .setAttribute(TrecFeatures.won, contarPalabras(correo, " won "))
                .setAttribute(TrecFeatures.wonder, contarPalabras(correo, " wonder "))
                .setAttribute(TrecFeatures.word, contarPalabras(correo, " word "))
                .setAttribute(TrecFeatures.words, contarPalabras(correo, " words "))
                .setAttribute(TrecFeatures.work, contarPalabras(correo, " work "))
                .setAttribute(TrecFeatures.workers, contarPalabras(correo, " workers "))
                .setAttribute(TrecFeatures.works, contarPalabras(correo, " works "))
                .setAttribute(TrecFeatures.worldview, contarPalabras(correo, " worldview "))
                .setAttribute(TrecFeatures.worse, contarPalabras(correo, " worse "))
                .setAttribute(TrecFeatures.worst, contarPalabras(correo, " worst "))
                .setAttribute(TrecFeatures.would, contarPalabras(correo, " would "))
                .setAttribute(TrecFeatures.write, contarPalabras(correo, " write "))
                .setAttribute(TrecFeatures.www, contarPalabras(correo, " www "))
                .setAttribute(TrecFeatures.y, contarPalabras(correo, " y "))
                .setAttribute(TrecFeatures.year, contarPalabras(correo, " year "))
                .setAttribute(TrecFeatures.years, contarPalabras(correo, " years "))
                .setAttribute(TrecFeatures.yes, contarPalabras(correo, " yes "))
                .setAttribute(TrecFeatures.yet, contarPalabras(correo, " yet "))
                .setAttribute(TrecFeatures.you, contarPalabras(correo, " you "))
                .setAttribute(TrecFeatures.young, contarPalabras(correo, " young "))
                .setAttribute(TrecFeatures.younger, contarPalabras(correo, " younger "))
                .setAttribute(TrecFeatures.your, contarPalabras(correo, " your "))
                .setAttribute(TrecFeatures.yours, contarPalabras(correo, " yours "))
                .setAttribute(TrecFeatures.yourself, contarPalabras(correo, " yourself "))
                .setAttribute(TrecFeatures.abbott, contarPalabras(correo, " abbott "))
                .setAttribute(TrecFeatures.according, contarPalabras(correo, " according "))
                .setAttribute(TrecFeatures.accuweather, contarPalabras(correo, " accuweather "))
                .setAttribute(TrecFeatures.actual, contarPalabras(correo, " actual "))
                .setAttribute(TrecFeatures.add, contarPalabras(correo, " add "))
                .setAttribute(TrecFeatures.added, contarPalabras(correo, " added "))
                .setAttribute(TrecFeatures.additional, contarPalabras(correo, " additional "))
                .setAttribute(TrecFeatures.administration, contarPalabras(correo, " administration "))
                .setAttribute(TrecFeatures.against, contarPalabras(correo, " against "))
                .setAttribute(TrecFeatures.agreed, contarPalabras(correo, " agreed "))
                .setAttribute(TrecFeatures.agreement, contarPalabras(correo, " agreement "))
                .setAttribute(TrecFeatures.alerts, contarPalabras(correo, " alerts "))
                .setAttribute(TrecFeatures.alias, contarPalabras(correo, " alias "))
                .setAttribute(TrecFeatures.allison, contarPalabras(correo, " allison "))
                .setAttribute(TrecFeatures.alter, contarPalabras(correo, " alter "))
                .setAttribute(TrecFeatures.analysis, contarPalabras(correo, " analysis "))
                .setAttribute(TrecFeatures.annex, contarPalabras(correo, " annex "))
                .setAttribute(TrecFeatures.ap, contarPalabras(correo, " ap "))
                .setAttribute(TrecFeatures.apple, contarPalabras(correo, " apple "))
                .setAttribute(TrecFeatures.archaeologists, contarPalabras(correo, " archaeologists "))
                .setAttribute(TrecFeatures.areas, contarPalabras(correo, " areas "))
                .setAttribute(TrecFeatures.arm, contarPalabras(correo, " arm "))
                .setAttribute(TrecFeatures.atlanta, contarPalabras(correo, " atlanta "))
                .setAttribute(TrecFeatures.barracuda, contarPalabras(correo, " barracuda "))
                .setAttribute(TrecFeatures.base, contarPalabras(correo, " base "))
                .setAttribute(TrecFeatures.bbc, contarPalabras(correo, " bbc "))
                .setAttribute(TrecFeatures.begin, contarPalabras(correo, " begin "))
                .setAttribute(TrecFeatures.beginning, contarPalabras(correo, " beginning "))
                .setAttribute(TrecFeatures.bhatia, contarPalabras(correo, " bhatia "))
                .setAttribute(TrecFeatures.black, contarPalabras(correo, " black "))
                .setAttribute(TrecFeatures.blood, contarPalabras(correo, " blood "))
                .setAttribute(TrecFeatures.blue, contarPalabras(correo, " blue "))
                .setAttribute(TrecFeatures.bob, contarPalabras(correo, " bob "))
                .setAttribute(TrecFeatures.bold, contarPalabras(correo, " bold "))
                .setAttribute(TrecFeatures.branches, contarPalabras(correo, " branches "))
                .setAttribute(TrecFeatures.breaking, contarPalabras(correo, " breaking "))
                .setAttribute(TrecFeatures.broken, contarPalabras(correo, " broken "))
                .setAttribute(TrecFeatures.bruto, contarPalabras(correo, " bruto "))
                .setAttribute(TrecFeatures.buffer, contarPalabras(correo, " buffer "))
                .setAttribute(TrecFeatures.bug, contarPalabras(correo, " bug "))
                .setAttribute(TrecFeatures.built, contarPalabras(correo, " built "))
                .setAttribute(TrecFeatures.bulk, contarPalabras(correo, " bulk "))
                .setAttribute(TrecFeatures.bush, contarPalabras(correo, " bush "))
                .setAttribute(TrecFeatures.buttons, contarPalabras(correo, " buttons "))
                .setAttribute(TrecFeatures.cable, contarPalabras(correo, " cable "))
                .setAttribute(TrecFeatures.cacheprime, contarPalabras(correo, " cacheprime "))
                .setAttribute(TrecFeatures.california, contarPalabras(correo, " california "))
                .setAttribute(TrecFeatures.calls, contarPalabras(correo, " calls "))
                .setAttribute(TrecFeatures.campaign, contarPalabras(correo, " campaign "))
                .setAttribute(TrecFeatures.capricorn, contarPalabras(correo, " capricorn "))
                .setAttribute(TrecFeatures.cases, contarPalabras(correo, " cases "))
                .setAttribute(TrecFeatures.cbs, contarPalabras(correo, " cbs "))
                .setAttribute(TrecFeatures.cbsnews, contarPalabras(correo, " cbsnews "))
                .setAttribute(TrecFeatures.cc, contarPalabras(correo, " cc "))
                .setAttribute(TrecFeatures.certain, contarPalabras(correo, " certain "))
                .setAttribute(TrecFeatures.cest, contarPalabras(correo, " cest "))
                .setAttribute(TrecFeatures.cf, contarPalabras(correo, " cf "))
                .setAttribute(TrecFeatures.cgi, contarPalabras(correo, " cgi "))
                .setAttribute(TrecFeatures.ch, contarPalabras(correo, " ch "))
                .setAttribute(TrecFeatures.chairman, contarPalabras(correo, " chairman "))
                .setAttribute(TrecFeatures.changed, contarPalabras(correo, " changed "))
                .setAttribute(TrecFeatures.changes, contarPalabras(correo, " changes "))
                .setAttribute(TrecFeatures.changeset, contarPalabras(correo, " changeset "))
                .setAttribute(TrecFeatures.cheers, contarPalabras(correo, " cheers "))
                .setAttribute(TrecFeatures.clear, contarPalabras(correo, " clear "))
                .setAttribute(TrecFeatures.client, contarPalabras(correo, " client "))
                .setAttribute(TrecFeatures.clients, contarPalabras(correo, " clients "))
                .setAttribute(TrecFeatures.close, contarPalabras(correo, " close "))
                .setAttribute(TrecFeatures.clouds, contarPalabras(correo, " clouds "))
                .setAttribute(TrecFeatures.cloudy, contarPalabras(correo, " cloudy "))
                .setAttribute(TrecFeatures.cnn, contarPalabras(correo, " cnn "))
                .setAttribute(TrecFeatures.co, contarPalabras(correo, " co "))
                .setAttribute(TrecFeatures.cochrane, contarPalabras(correo, " cochrane "))
                .setAttribute(TrecFeatures.code, contarPalabras(correo, " code "))
                .setAttribute(TrecFeatures.commands, contarPalabras(correo, " commands "))
                .setAttribute(TrecFeatures.commented, contarPalabras(correo, " commented "))
                .setAttribute(TrecFeatures.commercial, contarPalabras(correo, " commercial "))
                .setAttribute(TrecFeatures.commit, contarPalabras(correo, " commit "))
                .setAttribute(TrecFeatures.committee, contarPalabras(correo, " committee "))
                .setAttribute(TrecFeatures.conf, contarPalabras(correo, " conf "))
                .setAttribute(TrecFeatures.conference, contarPalabras(correo, " conference "))
                .setAttribute(TrecFeatures.configure, contarPalabras(correo, " configure "))
                .setAttribute(TrecFeatures.congress, contarPalabras(correo, " congress "))
                .setAttribute(TrecFeatures.content, contarPalabras(correo, " content "))
                .setAttribute(TrecFeatures.control, contarPalabras(correo, " control "))
                .setAttribute(TrecFeatures.cool, contarPalabras(correo, " cool "))
                .setAttribute(TrecFeatures.copy, contarPalabras(correo, " copy "))
                .setAttribute(TrecFeatures.copyright, contarPalabras(correo, " copyright "))
                .setAttribute(TrecFeatures.core, contarPalabras(correo, " core "))
                .setAttribute(TrecFeatures.corp, contarPalabras(correo, " corp "))
                .setAttribute(TrecFeatures.correct, contarPalabras(correo, " correct "))
                .setAttribute(TrecFeatures.correspondence, contarPalabras(correo, " correspondence "))
                .setAttribute(TrecFeatures.countries, contarPalabras(correo, " countries "))
                .setAttribute(TrecFeatures.court, contarPalabras(correo, " court "))
                .setAttribute(TrecFeatures.create, contarPalabras(correo, " create "))
                .setAttribute(TrecFeatures.created, contarPalabras(correo, " created "))
                .setAttribute(TrecFeatures.cultural, contarPalabras(correo, " cultural "))
                .setAttribute(TrecFeatures.currently, contarPalabras(correo, " currently "))
                .setAttribute(TrecFeatures.cut, contarPalabras(correo, " cut "))
                .setAttribute(TrecFeatures.cvs, contarPalabras(correo, " cvs "))
                .setAttribute(TrecFeatures.dafydd, contarPalabras(correo, " dafydd "))
                .setAttribute(TrecFeatures.daily, contarPalabras(correo, " daily "))
                .setAttribute(TrecFeatures.datasets, contarPalabras(correo, " datasets "))
                .setAttribute(TrecFeatures.dealers, contarPalabras(correo, " dealers "))
                .setAttribute(TrecFeatures.debian, contarPalabras(correo, " debian "))
                .setAttribute(TrecFeatures.decision, contarPalabras(correo, " decision "))
                .setAttribute(TrecFeatures.dedibox, contarPalabras(correo, " dedibox "))
                .setAttribute(TrecFeatures.demand, contarPalabras(correo, " demand "))
                .setAttribute(TrecFeatures.democratic, contarPalabras(correo, " democratic "))
                .setAttribute(TrecFeatures.democrats, contarPalabras(correo, " democrats "))
                .setAttribute(TrecFeatures.department, contarPalabras(correo, " department "))
                .setAttribute(TrecFeatures.dept, contarPalabras(correo, " dept "))
                .setAttribute(TrecFeatures.des, contarPalabras(correo, " des "))
                .setAttribute(TrecFeatures.description, contarPalabras(correo, " description "))
                .setAttribute(TrecFeatures.develooper, contarPalabras(correo, " develooper "))
                .setAttribute(TrecFeatures.development, contarPalabras(correo, " development "))
                .setAttribute(TrecFeatures.devices, contarPalabras(correo, " devices "))
                .setAttribute(TrecFeatures.di, contarPalabras(correo, " di "))
                .setAttribute(TrecFeatures.didmsg, contarPalabras(correo, " didmsg "))
                .setAttribute(TrecFeatures.didn, contarPalabras(correo, " didn "))
                .setAttribute(TrecFeatures.differential, contarPalabras(correo, " differential "))
                .setAttribute(TrecFeatures.directory, contarPalabras(correo, " directory "))
                .setAttribute(TrecFeatures.discuss, contarPalabras(correo, " discuss "))
                .setAttribute(TrecFeatures.discussions, contarPalabras(correo, " discussions "))
                .setAttribute(TrecFeatures.document, contarPalabras(correo, " document "))
                .setAttribute(TrecFeatures.doesn, contarPalabras(correo, " doesn "))
                .setAttribute(TrecFeatures.domain, contarPalabras(correo, " domain "))
                .setAttribute(TrecFeatures.dp, contarPalabras(correo, " dp "))
                .setAttribute(TrecFeatures.du, contarPalabras(correo, " du "))
                .setAttribute(TrecFeatures.earlier, contarPalabras(correo, " earlier "))
                .setAttribute(TrecFeatures.easter, contarPalabras(correo, " easter "))
                .setAttribute(TrecFeatures.easy, contarPalabras(correo, " easy "))
                .setAttribute(TrecFeatures.ebzao, contarPalabras(correo, " ebzao "))
                .setAttribute(TrecFeatures.echo, contarPalabras(correo, " echo "))
                .setAttribute(TrecFeatures.edu, contarPalabras(correo, " edu "))
                .setAttribute(TrecFeatures.ensure, contarPalabras(correo, " ensure "))
                .setAttribute(TrecFeatures.entry, contarPalabras(correo, " entry "))
                .setAttribute(TrecFeatures.environment, contarPalabras(correo, " environment "))
                .setAttribute(TrecFeatures.err, contarPalabras(correo, " err "))
                .setAttribute(TrecFeatures.essential, contarPalabras(correo, " essential "))
                .setAttribute(TrecFeatures.et, contarPalabras(correo, " et "))
                .setAttribute(TrecFeatures.etc, contarPalabras(correo, " etc "))
                .setAttribute(TrecFeatures.ethz, contarPalabras(correo, " ethz "))
                .setAttribute(TrecFeatures.event, contarPalabras(correo, " event "))
                .setAttribute(TrecFeatures.example, contarPalabras(correo, " example "))
                .setAttribute(TrecFeatures.exchange, contarPalabras(correo, " exchange "))
                .setAttribute(TrecFeatures.exim, contarPalabras(correo, " exim "))
                .setAttribute(TrecFeatures.experts, contarPalabras(correo, " experts "))
                .setAttribute(TrecFeatures.ezmlm, contarPalabras(correo, " ezmlm "))
                .setAttribute(TrecFeatures.f, contarPalabras(correo, " f "))
                .setAttribute(TrecFeatures.factor, contarPalabras(correo, " factor "))
                .setAttribute(TrecFeatures.fd, contarPalabras(correo, " fd "))
                .setAttribute(TrecFeatures.file, contarPalabras(correo, " file "))
                .setAttribute(TrecFeatures.files, contarPalabras(correo, " files "))
                .setAttribute(TrecFeatures.firewall, contarPalabras(correo, " firewall "))
                .setAttribute(TrecFeatures.fix, contarPalabras(correo, " fix "))
                .setAttribute(TrecFeatures.fixed, contarPalabras(correo, " fixed "))
                .setAttribute(TrecFeatures.fixes, contarPalabras(correo, " fixes "))
                .setAttribute(TrecFeatures.flag, contarPalabras(correo, " flag "))
                .setAttribute(TrecFeatures.flags, contarPalabras(correo, " flags "))
                .setAttribute(TrecFeatures.fog, contarPalabras(correo, " fog "))
                .setAttribute(TrecFeatures.following, contarPalabras(correo, " following "))
                .setAttribute(TrecFeatures.force, contarPalabras(correo, " force "))
                .setAttribute(TrecFeatures.forecast, contarPalabras(correo, " forecast "))
                .setAttribute(TrecFeatures.foreign, contarPalabras(correo, " foreign "))
                .setAttribute(TrecFeatures.former, contarPalabras(correo, " former "))
                .setAttribute(TrecFeatures.fox, contarPalabras(correo, " fox "))
                .setAttribute(TrecFeatures.foxnews, contarPalabras(correo, " foxnews "))
                .setAttribute(TrecFeatures.frame, contarPalabras(correo, " frame "))
                .setAttribute(TrecFeatures.framework, contarPalabras(correo, " framework "))
                .setAttribute(TrecFeatures.fri, contarPalabras(correo, " fri "))
                .setAttribute(TrecFeatures.fromfd, contarPalabras(correo, " fromfd "))
                .setAttribute(TrecFeatures.fta, contarPalabras(correo, " fta "))
                .setAttribute(TrecFeatures.function, contarPalabras(correo, " function "))
                .setAttribute(TrecFeatures.functions, contarPalabras(correo, " functions "))
                .setAttribute(TrecFeatures.gabor, contarPalabras(correo, " gabor "))
                .setAttribute(TrecFeatures.gas, contarPalabras(correo, " gas "))
                .setAttribute(TrecFeatures.general, contarPalabras(correo, " general "))
                .setAttribute(TrecFeatures.george, contarPalabras(correo, " george "))
                .setAttribute(TrecFeatures.georgia, contarPalabras(correo, " georgia "))
                .setAttribute(TrecFeatures.gets, contarPalabras(correo, " gets "))
                .setAttribute(TrecFeatures.given, contarPalabras(correo, " given "))
                .setAttribute(TrecFeatures.global, contarPalabras(correo, " global "))
                .setAttribute(TrecFeatures.gmt, contarPalabras(correo, " gmt "))
                .setAttribute(TrecFeatures.gonzales, contarPalabras(correo, " gonzales "))
                .setAttribute(TrecFeatures.google, contarPalabras(correo, " google "))
                .setAttribute(TrecFeatures.government, contarPalabras(correo, " government "))
                .setAttribute(TrecFeatures.green, contarPalabras(correo, " green "))
                .setAttribute(TrecFeatures.greg, contarPalabras(correo, " greg "))
                .setAttribute(TrecFeatures.guide, contarPalabras(correo, " guide "))
                .setAttribute(TrecFeatures.h, contarPalabras(correo, " h "))
                .setAttribute(TrecFeatures.handle, contarPalabras(correo, " handle "))
                .setAttribute(TrecFeatures.hello, contarPalabras(correo, " hello "))
                .setAttribute(TrecFeatures.hi, contarPalabras(correo, " hi "))
                .setAttribute(TrecFeatures.hourly, contarPalabras(correo, " hourly "))
                .setAttribute(TrecFeatures.hover, contarPalabras(correo, " hover "))
                .setAttribute(TrecFeatures.howstuffworks, contarPalabras(correo, " howstuffworks "))
                .setAttribute(TrecFeatures.htaccess, contarPalabras(correo, " htaccess "))
                .setAttribute(TrecFeatures.http, contarPalabras(correo, " http "))
                .setAttribute(TrecFeatures.hypatia, contarPalabras(correo, " hypatia "))
                .setAttribute(TrecFeatures.immediately, contarPalabras(correo, " immediately "))
                .setAttribute(TrecFeatures.immigration, contarPalabras(correo, " immigration "))
                .setAttribute(TrecFeatures.important, contarPalabras(correo, " important "))
                .setAttribute(TrecFeatures.imus, contarPalabras(correo, " imus "))
                .setAttribute(TrecFeatures.inc, contarPalabras(correo, " inc "))
                .setAttribute(TrecFeatures.include, contarPalabras(correo, " include "))
                .setAttribute(TrecFeatures.includes, contarPalabras(correo, " includes "))
                .setAttribute(TrecFeatures.india, contarPalabras(correo, " india "))
                .setAttribute(TrecFeatures.initial, contarPalabras(correo, " initial "))
                .setAttribute(TrecFeatures.innovative, contarPalabras(correo, " innovative "))
                .setAttribute(TrecFeatures.inside, contarPalabras(correo, " inside "))
                .setAttribute(TrecFeatures.install, contarPalabras(correo, " install "))
                .setAttribute(TrecFeatures.installed, contarPalabras(correo, " installed "))
                .setAttribute(TrecFeatures.institute, contarPalabras(correo, " institute "))
                .setAttribute(TrecFeatures.integration, contarPalabras(correo, " integration "))
                .setAttribute(TrecFeatures.intellectual, contarPalabras(correo, " intellectual "))
                .setAttribute(TrecFeatures.intended, contarPalabras(correo, " intended "))
                .setAttribute(TrecFeatures.interaction, contarPalabras(correo, " interaction "))
                .setAttribute(TrecFeatures.interactive, contarPalabras(correo, " interactive "))
                .setAttribute(TrecFeatures.internal, contarPalabras(correo, " internal "))
                .setAttribute(TrecFeatures.internals, contarPalabras(correo, " internals "))
                .setAttribute(TrecFeatures.international, contarPalabras(correo, " international "))
                .setAttribute(TrecFeatures.interp, contarPalabras(correo, " interp "))
                .setAttribute(TrecFeatures.intval, contarPalabras(correo, " intval "))
                .setAttribute(TrecFeatures.invoked, contarPalabras(correo, " invoked "))
                .setAttribute(TrecFeatures.iraq, contarPalabras(correo, " iraq "))
                .setAttribute(TrecFeatures.issues, contarPalabras(correo, " issues "))
                .setAttribute(TrecFeatures.item, contarPalabras(correo, " item "))
                .setAttribute(TrecFeatures.james, contarPalabras(correo, " james "))
                .setAttribute(TrecFeatures.jeremy, contarPalabras(correo, " jeremy "))
                .setAttribute(TrecFeatures.jerry, contarPalabras(correo, " jerry "))
                .setAttribute(TrecFeatures.john, contarPalabras(correo, " john "))
                .setAttribute(TrecFeatures.johnson, contarPalabras(correo, " johnson "))
                .setAttribute(TrecFeatures.kernel, contarPalabras(correo, " kernel "))
                .setAttribute(TrecFeatures.king, contarPalabras(correo, " king "))
                .setAttribute(TrecFeatures.korea, contarPalabras(correo, " korea "))
                .setAttribute(TrecFeatures.korean, contarPalabras(correo, " korean "))
                .setAttribute(TrecFeatures.labor, contarPalabras(correo, " labor "))
                .setAttribute(TrecFeatures.lack, contarPalabras(correo, " lack "))
                .setAttribute(TrecFeatures.language, contarPalabras(correo, " language "))
                .setAttribute(TrecFeatures.lapply, contarPalabras(correo, " lapply "))
                .setAttribute(TrecFeatures.laptop, contarPalabras(correo, " laptop "))
                .setAttribute(TrecFeatures.law, contarPalabras(correo, " law "))
                .setAttribute(TrecFeatures.le, contarPalabras(correo, " le "))
                .setAttribute(TrecFeatures.least, contarPalabras(correo, " least "))
                .setAttribute(TrecFeatures.len, contarPalabras(correo, " len "))
                .setAttribute(TrecFeatures.les, contarPalabras(correo, " les "))
                .setAttribute(TrecFeatures.lib, contarPalabras(correo, " lib "))
                .setAttribute(TrecFeatures.likely, contarPalabras(correo, " likely "))
                .setAttribute(TrecFeatures.links, contarPalabras(correo, " links "))
                .setAttribute(TrecFeatures.linux, contarPalabras(correo, " linux "))
                .setAttribute(TrecFeatures.lists, contarPalabras(correo, " lists "))
                .setAttribute(TrecFeatures.listserv, contarPalabras(correo, " listserv "))
                .setAttribute(TrecFeatures.log, contarPalabras(correo, " log "))
                .setAttribute(TrecFeatures.looks, contarPalabras(correo, " looks "))
                .setAttribute(TrecFeatures.lp, contarPalabras(correo, " lp "))
                .setAttribute(TrecFeatures.machine, contarPalabras(correo, " machine "))
                .setAttribute(TrecFeatures.machines, contarPalabras(correo, " machines "))
                .setAttribute(TrecFeatures.mailhost, contarPalabras(correo, " mailhost "))
                .setAttribute(TrecFeatures.mailing, contarPalabras(correo, " mailing "))
                .setAttribute(TrecFeatures.makes, contarPalabras(correo, " makes "))
                .setAttribute(TrecFeatures.making, contarPalabras(correo, " making "))
                .setAttribute(TrecFeatures.manage, contarPalabras(correo, " manage "))
                .setAttribute(TrecFeatures.management, contarPalabras(correo, " management "))
                .setAttribute(TrecFeatures.marketing, contarPalabras(correo, " marketing "))
                .setAttribute(TrecFeatures.math, contarPalabras(correo, " math "))
                .setAttribute(TrecFeatures.max, contarPalabras(correo, " max "))
                .setAttribute(TrecFeatures.maybe, contarPalabras(correo, " maybe "))
                .setAttribute(TrecFeatures.medical, contarPalabras(correo, " medical "))
                .setAttribute(TrecFeatures.medicines, contarPalabras(correo, " medicines "))
                .setAttribute(TrecFeatures.medium, contarPalabras(correo, " medium "))
                .setAttribute(TrecFeatures.meeting, contarPalabras(correo, " meeting "))
                .setAttribute(TrecFeatures.members, contarPalabras(correo, " members "))
                .setAttribute(TrecFeatures.messages, contarPalabras(correo, " messages "))
                .setAttribute(TrecFeatures.messaging, contarPalabras(correo, " messaging "))
                .setAttribute(TrecFeatures.method, contarPalabras(correo, " method "))
                .setAttribute(TrecFeatures.methods, contarPalabras(correo, " methods "))
                .setAttribute(TrecFeatures.michael, contarPalabras(correo, " michael "))
                .setAttribute(TrecFeatures.mike, contarPalabras(correo, " mike "))
                .setAttribute(TrecFeatures.minimal, contarPalabras(correo, " minimal "))
                .setAttribute(TrecFeatures.mirror, contarPalabras(correo, " mirror "))
                .setAttribute(TrecFeatures.model, contarPalabras(correo, " model "))
                .setAttribute(TrecFeatures.modified, contarPalabras(correo, " modified "))
                .setAttribute(TrecFeatures.modify, contarPalabras(correo, " modify "))
                .setAttribute(TrecFeatures.module, contarPalabras(correo, " module "))
                .setAttribute(TrecFeatures.modules, contarPalabras(correo, " modules "))
                .setAttribute(TrecFeatures.monday, contarPalabras(correo, " monday "))
                .setAttribute(TrecFeatures.morning, contarPalabras(correo, " morning "))
                .setAttribute(TrecFeatures.mostly, contarPalabras(correo, " mostly "))
                .setAttribute(TrecFeatures.muenchen, contarPalabras(correo, " muenchen "))
                .setAttribute(TrecFeatures.multiple, contarPalabras(correo, " multiple "))
                .setAttribute(TrecFeatures.murphy, contarPalabras(correo, " murphy "))
                .setAttribute(TrecFeatures.museum, contarPalabras(correo, " museum "))
                .setAttribute(TrecFeatures.mx, contarPalabras(correo, " mx "))
                .setAttribute(TrecFeatures.mylast, contarPalabras(correo, " mylast "))
                .setAttribute(TrecFeatures.nearly, contarPalabras(correo, " nearly "))
                .setAttribute(TrecFeatures.newsletter, contarPalabras(correo, " newsletter "))
                .setAttribute(TrecFeatures.nl, contarPalabras(correo, " nl "))
                .setAttribute(TrecFeatures.noshade, contarPalabras(correo, " noshade "))
                .setAttribute(TrecFeatures.notification, contarPalabras(correo, " notification "))
                .setAttribute(TrecFeatures.nread, contarPalabras(correo, " nread "))
                .setAttribute(TrecFeatures.nt, contarPalabras(correo, " nt "))
                .setAttribute(TrecFeatures.nuclear, contarPalabras(correo, " nuclear "))
                .setAttribute(TrecFeatures.num, contarPalabras(correo, " num "))
                .setAttribute(TrecFeatures.ny, contarPalabras(correo, " ny "))
                .setAttribute(TrecFeatures.object, contarPalabras(correo, " object "))
                .setAttribute(TrecFeatures.objects, contarPalabras(correo, " objects "))
                .setAttribute(TrecFeatures.offset, contarPalabras(correo, " offset "))
                .setAttribute(TrecFeatures.op, contarPalabras(correo, " op "))
                .setAttribute(TrecFeatures.open, contarPalabras(correo, " open "))
                .setAttribute(TrecFeatures.option, contarPalabras(correo, " option "))
                .setAttribute(TrecFeatures.options, contarPalabras(correo, " options "))
                .setAttribute(TrecFeatures.org, contarPalabras(correo, " org "))
                .setAttribute(TrecFeatures.packages, contarPalabras(correo, " packages "))
                .setAttribute(TrecFeatures.panel, contarPalabras(correo, " panel "))
                .setAttribute(TrecFeatures.par, contarPalabras(correo, " par "))
                .setAttribute(TrecFeatures.parrot, contarPalabras(correo, " parrot "))
                .setAttribute(TrecFeatures.particular, contarPalabras(correo, " particular "))
                .setAttribute(TrecFeatures.pass, contarPalabras(correo, " pass "))
                .setAttribute(TrecFeatures.patch, contarPalabras(correo, " patch "))
                .setAttribute(TrecFeatures.patent, contarPalabras(correo, " patent "))
                .setAttribute(TrecFeatures.paul, contarPalabras(correo, " paul "))
                .setAttribute(TrecFeatures.pdt, contarPalabras(correo, " pdt "))
                .setAttribute(TrecFeatures.peach, contarPalabras(correo, " peach "))
                .setAttribute(TrecFeatures.pedal, contarPalabras(correo, " pedal "))
                .setAttribute(TrecFeatures.performance, contarPalabras(correo, " performance "))
                .setAttribute(TrecFeatures.period, contarPalabras(correo, " period "))
                .setAttribute(TrecFeatures.perl, contarPalabras(correo, " perl "))
                .setAttribute(TrecFeatures.pharmaceutical, contarPalabras(correo, " pharmaceutical "))
                .setAttribute(TrecFeatures.pharmaceuticals, contarPalabras(correo, " pharmaceuticals "))
                .setAttribute(TrecFeatures.pickup, contarPalabras(correo, " pickup "))
                .setAttribute(TrecFeatures.planning, contarPalabras(correo, " planning "))
                .setAttribute(TrecFeatures.platform, contarPalabras(correo, " platform "))
                .setAttribute(TrecFeatures.plot, contarPalabras(correo, " plot "))
                .setAttribute(TrecFeatures.plus, contarPalabras(correo, " plus "))
                .setAttribute(TrecFeatures.policy, contarPalabras(correo, " policy "))
                .setAttribute(TrecFeatures.political, contarPalabras(correo, " political "))
                .setAttribute(TrecFeatures.port, contarPalabras(correo, " port "))
                .setAttribute(TrecFeatures.possible, contarPalabras(correo, " possible "))
                .setAttribute(TrecFeatures.post, contarPalabras(correo, " post "))
                .setAttribute(TrecFeatures.postfix, contarPalabras(correo, " postfix "))
                .setAttribute(TrecFeatures.posting, contarPalabras(correo, " posting "))
                .setAttribute(TrecFeatures.precedence, contarPalabras(correo, " precedence "))
                .setAttribute(TrecFeatures.preference, contarPalabras(correo, " preference "))
                .setAttribute(TrecFeatures.preferences, contarPalabras(correo, " preferences "))
                .setAttribute(TrecFeatures.president, contarPalabras(correo, " president "))
                .setAttribute(TrecFeatures.presidential, contarPalabras(correo, " presidential "))
                .setAttribute(TrecFeatures.pressure, contarPalabras(correo, " pressure "))
                .setAttribute(TrecFeatures.pricing, contarPalabras(correo, " pricing "))
                .setAttribute(TrecFeatures.primary, contarPalabras(correo, " primary "))
                .setAttribute(TrecFeatures.print, contarPalabras(correo, " print "))
                .setAttribute(TrecFeatures.probably, contarPalabras(correo, " probably "))
                .setAttribute(TrecFeatures.process, contarPalabras(correo, " process "))
                .setAttribute(TrecFeatures.produce, contarPalabras(correo, " produce "))
                .setAttribute(TrecFeatures.programs, contarPalabras(correo, " programs "))
                .setAttribute(TrecFeatures.project, contarPalabras(correo, " project "))
                .setAttribute(TrecFeatures.property, contarPalabras(correo, " property "))
                .setAttribute(TrecFeatures.provided, contarPalabras(correo, " provided "))
                .setAttribute(TrecFeatures.provision, contarPalabras(correo, " provision "))
                .setAttribute(TrecFeatures.provisions, contarPalabras(correo, " provisions "))
                .setAttribute(TrecFeatures.push, contarPalabras(correo, " push "))
                .setAttribute(TrecFeatures.qmqp, contarPalabras(correo, " qmqp "))
                .setAttribute(TrecFeatures.question, contarPalabras(correo, " question "))
                .setAttribute(TrecFeatures.questions, contarPalabras(correo, " questions "))
                .setAttribute(TrecFeatures.quote, contarPalabras(correo, " quote "))
                .setAttribute(TrecFeatures.rbind, contarPalabras(correo, " rbind "))
                .setAttribute(TrecFeatures.readahead, contarPalabras(correo, " readahead "))
                .setAttribute(TrecFeatures.reading, contarPalabras(correo, " reading "))
                .setAttribute(TrecFeatures.reads, contarPalabras(correo, " reads "))
                .setAttribute(TrecFeatures.reason, contarPalabras(correo, " reason "))
                .setAttribute(TrecFeatures.reasons, contarPalabras(correo, " reasons "))
                .setAttribute(TrecFeatures.receiving, contarPalabras(correo, " receiving "))
                .setAttribute(TrecFeatures.recently, contarPalabras(correo, " recently "))
                .setAttribute(TrecFeatures.references, contarPalabras(correo, " references "))
                .setAttribute(TrecFeatures.related, contarPalabras(correo, " related "))
                .setAttribute(TrecFeatures.relations, contarPalabras(correo, " relations "))
                .setAttribute(TrecFeatures.release, contarPalabras(correo, " release "))
                .setAttribute(TrecFeatures.remove, contarPalabras(correo, " remove "))
                .setAttribute(TrecFeatures.reproducible, contarPalabras(correo, " reproducible "))
                .setAttribute(TrecFeatures.request, contarPalabras(correo, " request "))
                .setAttribute(TrecFeatures.requested, contarPalabras(correo, " requested "))
                .setAttribute(TrecFeatures.research, contarPalabras(correo, " research "))
                .setAttribute(TrecFeatures.reserved, contarPalabras(correo, " reserved "))
                .setAttribute(TrecFeatures.restrictions, contarPalabras(correo, " restrictions "))
                .setAttribute(TrecFeatures.returned, contarPalabras(correo, " returned "))
                .setAttribute(TrecFeatures.rev, contarPalabras(correo, " rev "))
                .setAttribute(TrecFeatures.review, contarPalabras(correo, " review "))
                .setAttribute(TrecFeatures.revision, contarPalabras(correo, " revision "))
                .setAttribute(TrecFeatures.rights, contarPalabras(correo, " rights "))
                .setAttribute(TrecFeatures.robert, contarPalabras(correo, " robert "))
                .setAttribute(TrecFeatures.rserve, contarPalabras(correo, " rserve "))
                .setAttribute(TrecFeatures.rule, contarPalabras(correo, " rule "))
                .setAttribute(TrecFeatures.rules, contarPalabras(correo, " rules "))
                .setAttribute(TrecFeatures.running, contarPalabras(correo, " running "))
                .setAttribute(TrecFeatures.samba, contarPalabras(correo, " samba "))
                .setAttribute(TrecFeatures.sans, contarPalabras(correo, " sans "))
                .setAttribute(TrecFeatures.sas, contarPalabras(correo, " sas "))
                .setAttribute(TrecFeatures.saturday, contarPalabras(correo, " saturday "))
                .setAttribute(TrecFeatures.script, contarPalabras(correo, " script "))
                .setAttribute(TrecFeatures.security, contarPalabras(correo, " security "))
                .setAttribute(TrecFeatures.seems, contarPalabras(correo, " seems "))
                .setAttribute(TrecFeatures.senate, contarPalabras(correo, " senate "))
                .setAttribute(TrecFeatures.server, contarPalabras(correo, " server "))
                .setAttribute(TrecFeatures.settings, contarPalabras(correo, " settings "))
                .setAttribute(TrecFeatures.sharpton, contarPalabras(correo, " sharpton "))
                .setAttribute(TrecFeatures.showbiz, contarPalabras(correo, " showbiz "))
                .setAttribute(TrecFeatures.shows, contarPalabras(correo, " shows "))
                .setAttribute(TrecFeatures.similar, contarPalabras(correo, " similar "))
                .setAttribute(TrecFeatures.simon, contarPalabras(correo, " simon "))
                .setAttribute(TrecFeatures.simple, contarPalabras(correo, " simple "))
                .setAttribute(TrecFeatures.single, contarPalabras(correo, " single "))
                .setAttribute(TrecFeatures.smb, contarPalabras(correo, " smb "))
                .setAttribute(TrecFeatures.smtpsvc, contarPalabras(correo, " smtpsvc "))
                .setAttribute(TrecFeatures.snow, contarPalabras(correo, " snow "))
                .setAttribute(TrecFeatures.solve, contarPalabras(correo, " solve "))
                .setAttribute(TrecFeatures.someone, contarPalabras(correo, " someone "))
                .setAttribute(TrecFeatures.spam, contarPalabras(correo, " spam "))
                .setAttribute(TrecFeatures.spamassassin, contarPalabras(correo, " spamassassin "))
                .setAttribute(TrecFeatures.spatstat, contarPalabras(correo, " spatstat "))
                .setAttribute(TrecFeatures.specific, contarPalabras(correo, " specific "))
                .setAttribute(TrecFeatures.sportsline, contarPalabras(correo, " sportsline "))
                .setAttribute(TrecFeatures.standard, contarPalabras(correo, " standard "))
                .setAttribute(TrecFeatures.stat, contarPalabras(correo, " stat "))
                .setAttribute(TrecFeatures.statistical, contarPalabras(correo, " statistical "))
                .setAttribute(TrecFeatures.stats, contarPalabras(correo, " stats "))
                .setAttribute(TrecFeatures.stock, contarPalabras(correo, " stock "))
                .setAttribute(TrecFeatures.stories, contarPalabras(correo, " stories "))
                .setAttribute(TrecFeatures.story, contarPalabras(correo, " story "))
                .setAttribute(TrecFeatures.string, contarPalabras(correo, " string "))
                .setAttribute(TrecFeatures.struct, contarPalabras(correo, " struct "))
                .setAttribute(TrecFeatures.student, contarPalabras(correo, " student "))
                .setAttribute(TrecFeatures.subscribe, contarPalabras(correo, " subscribe "))
                .setAttribute(TrecFeatures.subscribed, contarPalabras(correo, " subscribed "))
                .setAttribute(TrecFeatures.subversion, contarPalabras(correo, " subversion "))
                .setAttribute(TrecFeatures.sugar, contarPalabras(correo, " sugar "))
                .setAttribute(TrecFeatures.summary, contarPalabras(correo, " summary "))
                .setAttribute(TrecFeatures.sunday, contarPalabras(correo, " sunday "))
                .setAttribute(TrecFeatures.sunny, contarPalabras(correo, " sunny "))
                .setAttribute(TrecFeatures.svn, contarPalabras(correo, " svn "))
                .setAttribute(TrecFeatures.systems, contarPalabras(correo, " systems "))
                .setAttribute(TrecFeatures.table, contarPalabras(correo, " table "))
                .setAttribute(TrecFeatures.tahoma, contarPalabras(correo, " tahoma "))
                .setAttribute(TrecFeatures.td, contarPalabras(correo, " td "))
                .setAttribute(TrecFeatures.terms, contarPalabras(correo, " terms "))
                .setAttribute(TrecFeatures.test, contarPalabras(correo, " test "))
                .setAttribute(TrecFeatures.tests, contarPalabras(correo, " tests "))
                .setAttribute(TrecFeatures.therefore, contarPalabras(correo, " therefore "))
                .setAttribute(TrecFeatures.thursday, contarPalabras(correo, " thursday "))
                .setAttribute(TrecFeatures.ticket, contarPalabras(correo, " ticket "))
                .setAttribute(TrecFeatures.todo, contarPalabras(correo, " todo "))
                .setAttribute(TrecFeatures.tonight, contarPalabras(correo, " tonight "))
                .setAttribute(TrecFeatures.trouble, contarPalabras(correo, " trouble "))
                .setAttribute(TrecFeatures.txu, contarPalabras(correo, " txu "))
                .setAttribute(TrecFeatures.type, contarPalabras(correo, " type "))
                .setAttribute(TrecFeatures.uintval, contarPalabras(correo, " uintval "))
                .setAttribute(TrecFeatures.uk, contarPalabras(correo, " uk "))
                .setAttribute(TrecFeatures.understand, contarPalabras(correo, " understand "))
                .setAttribute(TrecFeatures.university, contarPalabras(correo, " university "))
                .setAttribute(TrecFeatures.unsigned, contarPalabras(correo, " unsigned "))
                .setAttribute(TrecFeatures.unsubscribe, contarPalabras(correo, " unsubscribe "))
                .setAttribute(TrecFeatures.update, contarPalabras(correo, " update "))
                .setAttribute(TrecFeatures.uppercase, contarPalabras(correo, " uppercase "))
                .setAttribute(TrecFeatures.urn, contarPalabras(correo, " urn "))
                .setAttribute(TrecFeatures.useful, contarPalabras(correo, " useful "))
                .setAttribute(TrecFeatures.user, contarPalabras(correo, " user "))
                .setAttribute(TrecFeatures.userid, contarPalabras(correo, " userid "))
                .setAttribute(TrecFeatures.users, contarPalabras(correo, " users "))
                .setAttribute(TrecFeatures.ustr, contarPalabras(correo, " ustr "))
                .setAttribute(TrecFeatures.utc, contarPalabras(correo, " utc "))
                .setAttribute(TrecFeatures.utilities, contarPalabras(correo, " utilities "))
                .setAttribute(TrecFeatures.utility, contarPalabras(correo, " utility "))
                .setAttribute(TrecFeatures.value, contarPalabras(correo, " value "))
                .setAttribute(TrecFeatures.values, contarPalabras(correo, " values "))
                .setAttribute(TrecFeatures.var, contarPalabras(correo, " var "))
                .setAttribute(TrecFeatures.variable, contarPalabras(correo, " variable "))
                .setAttribute(TrecFeatures.variables, contarPalabras(correo, " variables "))
                .setAttribute(TrecFeatures.via, contarPalabras(correo, " via "))
                .setAttribute(TrecFeatures.video, contarPalabras(correo, " video "))
                .setAttribute(TrecFeatures.visited, contarPalabras(correo, " visited "))
                .setAttribute(TrecFeatures.vol, contarPalabras(correo, " vol "))
                .setAttribute(TrecFeatures.vs, contarPalabras(correo, " vs "))
                .setAttribute(TrecFeatures.w, contarPalabras(correo, " w "))
                .setAttribute(TrecFeatures.warner, contarPalabras(correo, " warner "))
                .setAttribute(TrecFeatures.warnings, contarPalabras(correo, " warnings "))
                .setAttribute(TrecFeatures.washington, contarPalabras(correo, " washington "))
                .setAttribute(TrecFeatures.ways, contarPalabras(correo, " ways "))
                .setAttribute(TrecFeatures.wcl, contarPalabras(correo, " wcl "))
                .setAttribute(TrecFeatures.weather, contarPalabras(correo, " weather "))
                .setAttribute(TrecFeatures.websvn, contarPalabras(correo, " websvn "))
                .setAttribute(TrecFeatures.weeks, contarPalabras(correo, " weeks "))
                .setAttribute(TrecFeatures.whenever, contarPalabras(correo, " whenever "))
                .setAttribute(TrecFeatures.width, contarPalabras(correo, " width "))
                .setAttribute(TrecFeatures.win, contarPalabras(correo, " win "))
                .setAttribute(TrecFeatures.within, contarPalabras(correo, " within "))
                .setAttribute(TrecFeatures.worked, contarPalabras(correo, " worked "))
                .setAttribute(TrecFeatures.working, contarPalabras(correo, " working "))
                .setAttribute(TrecFeatures.writes, contarPalabras(correo, " writes "))
                .setAttribute(TrecFeatures.wrong, contarPalabras(correo, " wrong "))
                .setAttribute(TrecFeatures.wrote, contarPalabras(correo, " wrote "))
                .setAttribute(TrecFeatures.x, contarPalabras(correo, " x "))
                .setAttribute(TrecFeatures.york, contarPalabras(correo, " york "))
                .build() ;

                //note: building training instances algorithmically is done in much the same way

                //now identify the class of the instance we built
                TrecClass c = decider.getDecision(i);
                System.out.println(c) ;

                //and get some details about how this decision was made 
                HashMap<TrecClass, Double> distributions = decider.getDecisionDistribution(i) ;
                for (Map.Entry<TrecClass, Double> e:distributions.entrySet()) 
                        System.out.println(e.getKey() + ": " + e.getValue()) ;            
        }
        
        public static int contarPalabras(String sTexto, String sTextoBuscado) {
    		int contador = 0;
    		while (sTexto.indexOf(sTextoBuscado) > -1) {
    		      sTexto = sTexto.substring(sTexto.indexOf(
    		        sTextoBuscado)+sTextoBuscado.length(),sTexto.length());
    		      contador++; 
    		}
    		return contador;
    	}
}